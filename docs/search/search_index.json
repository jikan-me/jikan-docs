{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to JikanDocs\n\n\n\n\nInfo\n\n\nThis documentation is a \nwork in progress\n. Please report any issues \nhere\n\n\n\n\n\n\nInfo\n\n\nThis documentation is for Jikan \n2.0.0 RC1\n. For v1.x, refer \nhere\n.\n\n\n\n\nJikan is an \nunofficial\n \nMyAnimeList\n PHP API. It does \nnot\n require any authentication and parses the data via scraping. It provides what the official API lacks.\n\n\nThe raison d'\u00eatre of Jikan is to help developers easily get the data they need for their apps and projects without having to depend on the lackluster official API, unstable APIs, or sidetracking their projects to develop parsers.\n\n\nThe word Jikan literally translates to Time in Japanese (\u6642\u9593). And that's what this API saves you of.\n\n\nREST API\n\n\nIf you're not interested in using the PHP API, a REST API service as available as well.\n\n\n\n\nREST API DOCUMENTATION\n\n\n\n\nDisclaimer\n\n\n\n\nJikan is \nnot\n affiliated with MyAnimeList.net\n\n\nI am not liable for how you utilize this library. Use it responsibly as per MyAnimeList's \nTerms Of Service", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-jikandocs", 
            "text": "Info  This documentation is a  work in progress . Please report any issues  here    Info  This documentation is for Jikan  2.0.0 RC1 . For v1.x, refer  here .   Jikan is an  unofficial   MyAnimeList  PHP API. It does  not  require any authentication and parses the data via scraping. It provides what the official API lacks.  The raison d'\u00eatre of Jikan is to help developers easily get the data they need for their apps and projects without having to depend on the lackluster official API, unstable APIs, or sidetracking their projects to develop parsers.  The word Jikan literally translates to Time in Japanese (\u6642\u9593). And that's what this API saves you of.", 
            "title": "Welcome to JikanDocs"
        }, 
        {
            "location": "/#rest-api", 
            "text": "If you're not interested in using the PHP API, a REST API service as available as well.   REST API DOCUMENTATION", 
            "title": "REST API"
        }, 
        {
            "location": "/#disclaimer", 
            "text": "Jikan is  not  affiliated with MyAnimeList.net  I am not liable for how you utilize this library. Use it responsibly as per MyAnimeList's  Terms Of Service", 
            "title": "Disclaimer"
        }, 
        {
            "location": "/installation/", 
            "text": "Prerequisites\n\n\n\n\nPHP \n7.1+\n\n\nComposer\n\n\n\n\nDependencies\n\n\n\n\nGoutte\n - \n^3.2\n\n\n\n\nInstallation\n\n\n\n\ncomposer require jikan-me/jikan", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#prerequisites", 
            "text": "PHP  7.1+  Composer", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/installation/#dependencies", 
            "text": "Goutte  -  ^3.2", 
            "title": "Dependencies"
        }, 
        {
            "location": "/installation/#installation", 
            "text": "composer require jikan-me/jikan", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Instantiating\n\n\nSo there's 2 ways to use Jikan and every usage page will include examples of both methods.\n\n\nLegacy\n\n\nThis is how you used Jikan in v1 except it has one major difference. \"Extended requests\" are now separate requests.\n\n\n?php\n\n\nrequire\n \n__DIR__\n \n.\n \n/vendor/autoload.php\n;\n\n\nuse\n \nJikan\\Jikan\n;\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\n;\n\n\n\n\n\n\nStandard\n\n\nThis is for advanced PHP developers and how Jikan is to be used. Furthermore it follows PSR2 standards. The Legacy method is a wrapper for \nMalClient\n.\n\n\n?php\n\n\nrequire\n \n__DIR__\n \n.\n \n/vendor/autoload.php\n;\n\n\nuse\n \nJikan\\MyAnimeList\\MalClient\n;\n\n\n\n$jikan\n \n=\n \nnew\n \nMalClient\n;\n\n\n\n\n\n\n\n\nTip\n\n\nv2 has type hints, code documentation and follows PSR2 standards strictly. This enables autocompletion in many IDEs.\n\n\n\n\nMigration Notes\n\n\nJikan v2's usage is completely different from v1.\n\n\n\n\nAll methods in \nMalClient\n require their respective \nJikan\\Request\n object which hold request information.\n\n\nResponses are returned as \nPHP objects\n, no longer as arrays\n\n\nExtended Requests \nno longer\n exist. They're now as seperate requests.\n\n\nAll object properties are \nprivate\n and must be accessed via getters\n\n\nDate/Timestamps are now returned as [^1]\n\\DateTimeImmutable\n objects and are \nalways\n in \nUniversal Time Coordinated (UTC)\n\n\nDate ranges are returned as \n1\n\\Jikan\\Model\\Common\\DateRange\n\n\nCommon URLs are parsed as \n2\n\\Jikan\\Model\\Common\\MalUrl\n\n\n\n\n\n\n\n\n\n\n\n\nDateRange\n\n\n\n\n\n\nMalUrl", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#instantiating", 
            "text": "So there's 2 ways to use Jikan and every usage page will include examples of both methods.", 
            "title": "Instantiating"
        }, 
        {
            "location": "/getting-started/#legacy", 
            "text": "This is how you used Jikan in v1 except it has one major difference. \"Extended requests\" are now separate requests.  ?php  require   __DIR__   .   /vendor/autoload.php ;  use   Jikan\\Jikan ;  $jikan   =   new   Jikan ;", 
            "title": "Legacy"
        }, 
        {
            "location": "/getting-started/#standard", 
            "text": "This is for advanced PHP developers and how Jikan is to be used. Furthermore it follows PSR2 standards. The Legacy method is a wrapper for  MalClient .  ?php  require   __DIR__   .   /vendor/autoload.php ;  use   Jikan\\MyAnimeList\\MalClient ;  $jikan   =   new   MalClient ;    Tip  v2 has type hints, code documentation and follows PSR2 standards strictly. This enables autocompletion in many IDEs.", 
            "title": "Standard"
        }, 
        {
            "location": "/getting-started/#migration-notes", 
            "text": "Jikan v2's usage is completely different from v1.   All methods in  MalClient  require their respective  Jikan\\Request  object which hold request information.  Responses are returned as  PHP objects , no longer as arrays  Extended Requests  no longer  exist. They're now as seperate requests.  All object properties are  private  and must be accessed via getters  Date/Timestamps are now returned as [^1] \\DateTimeImmutable  objects and are  always  in  Universal Time Coordinated (UTC)  Date ranges are returned as  1 \\Jikan\\Model\\Common\\DateRange  Common URLs are parsed as  2 \\Jikan\\Model\\Common\\MalUrl       DateRange    MalUrl", 
            "title": "Migration Notes"
        }, 
        {
            "location": "/usage/anime/main/", 
            "text": "Anime: Main\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Anime\\Anime\n\n\nUsage: Legacy\n\n\nArgument:\n \nint\n\n\n?php\n\n\n\n// Fetch One Piece\ns (MAL ID: 21) data from it\ns main page\n\n\n$anime\n \n=\n \n$jikan\n-\nAnime\n(\n21\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Anime\\AnimeRequest\n\n\n?php\n\n\n\n$anime\n \n=\n \n$jikan\n-\ngetAnime\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeRequest\n(\n21\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Anime\\AnimeRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Anime\\Anime", 
            "title": "Anime"
        }, 
        {
            "location": "/usage/anime/main/#anime-main", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}  Response:   \\Jikan\\Model\\Anime\\Anime", 
            "title": "Anime: Main"
        }, 
        {
            "location": "/usage/anime/main/#usage-legacy", 
            "text": "Argument:   int  ?php  // Fetch One Piece s (MAL ID: 21) data from it s main page  $anime   =   $jikan - Anime ( 21 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/main/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Anime\\AnimeRequest  ?php  $anime   =   $jikan - getAnime ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeRequest ( 21 ))  );       Request:  \\Jikan\\Request\\Anime\\AnimeRequest    Model:  \\Jikan\\Model\\Anime\\Anime", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/characters-and-staff/", 
            "text": "Anime: Characters And Staff\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/characters\n\n\nResponse:\n \n\\Jikan\\Model\\Anime\\AnimeCharactersAndStaff\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch One Piece\ns (MAL ID: 21) characters \n staff\n\n\n$charactersAndStaff\n \n=\n \n$jikan\n-\nAnimeCharactersAndStaff\n(\n21\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest\n\n\n?php\n\n\n\n$charactersAndStaff\n \n=\n \n$jikan\n-\ngetAnimeCharactersAndStaff\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest\n(\n21\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Anime\\AnimeCharactersAndStaff", 
            "title": "Characters & Staff"
        }, 
        {
            "location": "/usage/anime/characters-and-staff/#anime-characters-and-staff", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/characters  Response:   \\Jikan\\Model\\Anime\\AnimeCharactersAndStaff", 
            "title": "Anime: Characters And Staff"
        }, 
        {
            "location": "/usage/anime/characters-and-staff/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch One Piece s (MAL ID: 21) characters   staff  $charactersAndStaff   =   $jikan - AnimeCharactersAndStaff ( 21 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/characters-and-staff/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest  ?php  $charactersAndStaff   =   $jikan - getAnimeCharactersAndStaff ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest ( 21 ))  );       Request:  \\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest    Model:  \\Jikan\\Model\\Anime\\AnimeCharactersAndStaff", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/episodes/", 
            "text": "Anime: Episodes\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/episode\n\n\nResponse:\n \n\\Jikan\\Model\\Anime\\AnimeEpisodes\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n, \nint $page\n\n\n?php\n\n\n\n// Fetch One Piece\ns (MAL ID: 21) episodse list\n\n\n$episodes\n \n=\n \n$jikan\n-\nAnimeEpisodes\n(\n21\n);\n\n\n\n// Episode lists are paginated if there\ns more than 100 episodes\n\n\n// Thus to fetch episodes starting from 101: page 2\n\n\n$episodes\n \n=\n \n$jikan\n-\nAnimeEpisodes\n(\n21\n,\n \n2\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest\n\n\n?php\n\n\n\n$episodes\n \n=\n \n$jikan\n-\ngetAnimeEpisodes\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeEpisodesRequest\n(\n21\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Anime\\AnimeEpisodesRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Anime\\AnimeEpisodes", 
            "title": "Episodes"
        }, 
        {
            "location": "/usage/anime/episodes/#anime-episodes", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/episode  Response:   \\Jikan\\Model\\Anime\\AnimeEpisodes", 
            "title": "Anime: Episodes"
        }, 
        {
            "location": "/usage/anime/episodes/#usage-legacy", 
            "text": "Arguments:   int $id ,  int $page  ?php  // Fetch One Piece s (MAL ID: 21) episodse list  $episodes   =   $jikan - AnimeEpisodes ( 21 );  // Episode lists are paginated if there s more than 100 episodes  // Thus to fetch episodes starting from 101: page 2  $episodes   =   $jikan - AnimeEpisodes ( 21 ,   2 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/episodes/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest  ?php  $episodes   =   $jikan - getAnimeEpisodes ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeEpisodesRequest ( 21 ))  );       Request:  \\Jikan\\Request\\Anime\\AnimeEpisodesRequest    Model:  \\Jikan\\Model\\Anime\\AnimeEpisodes", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/news/", 
            "text": "Anime: News\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/news\n\n\nResponse:\n \n\\Jikan\\Model\\News\\NewsListItem[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch news articles related to One Piece (MAL ID: 21) \n\n\n$news\n \n=\n \n$jikan\n-\nAnimeNews\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeNewsRequest\n(\n21\n))\n\n\n);\n\n\n\nforeach\n(\n$news\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \n$topic\n-\ngetIntro\n();\n\n\n    \necho\n \nAuthor: \n \n.\n \n$topic\n-\ngetAuthorName\n();\n\n\n}\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeNewsRequest\n\n\n?php\n\n\n\n$news\n \n=\n \n$jikan\n-\ngetNewsList\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeNewsRequest\n(\n21\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Request\\Anime\\AnimeNewsRequest\n\n\n\n\n\n\n\\Jikan\\Model\\News\\NewsListItem", 
            "title": "News"
        }, 
        {
            "location": "/usage/anime/news/#anime-news", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/news  Response:   \\Jikan\\Model\\News\\NewsListItem[]", 
            "title": "Anime: News"
        }, 
        {
            "location": "/usage/anime/news/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch news articles related to One Piece (MAL ID: 21)   $news   =   $jikan - AnimeNews ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeNewsRequest ( 21 ))  );  foreach ( $news   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   $topic - getIntro (); \n\n     echo   Author:    .   $topic - getAuthorName ();  }", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/news/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeNewsRequest  ?php  $news   =   $jikan - getNewsList ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeNewsRequest ( 21 ))  );       \\Jikan\\Request\\Anime\\AnimeNewsRequest    \\Jikan\\Model\\News\\NewsListItem", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/forum/", 
            "text": "Anime: Forum\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/forum\n\n\nResponse:\n \n\\Jikan\\Model\\Forum\\ForumTopic[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch forum topics related to One Piece (MAL ID: 21) \n\n\n$episodes\n \n=\n \n$jikan\n-\nAnimeForum\n(\n21\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeForumRequest\n\n\n?php\n\n\n\n$topics\n \n=\n \n$jikan\n-\ngetAnimeForum\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeForumRequest\n(\n21\n))\n\n\n);\n\n\n\nforeach\n(\n$topics\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \nReplies: \n \n.\n \n$topic\n-\ngetReplies\n();\n\n\n    \necho\n \nLast post by: \n \n.\n \n$topic\n-\nlastPost\n()\n-\ngetAuthorName\n();\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Request\\Anime\\AnimeForumRequest\n\n\n\n\n\n\n\\Jikan\\Model\\Forum\\ForumTopic", 
            "title": "Forum"
        }, 
        {
            "location": "/usage/anime/forum/#anime-forum", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/forum  Response:   \\Jikan\\Model\\Forum\\ForumTopic[]", 
            "title": "Anime: Forum"
        }, 
        {
            "location": "/usage/anime/forum/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch forum topics related to One Piece (MAL ID: 21)   $episodes   =   $jikan - AnimeForum ( 21 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/forum/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeForumRequest  ?php  $topics   =   $jikan - getAnimeForum ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeForumRequest ( 21 ))  );  foreach ( $topics   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   Replies:    .   $topic - getReplies (); \n\n     echo   Last post by:    .   $topic - lastPost () - getAuthorName ();  }       \\Jikan\\Request\\Anime\\AnimeForumRequest    \\Jikan\\Model\\Forum\\ForumTopic", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/videos/", 
            "text": "Anime: Videos\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/video\n\n\nResponse:\n \n\\Jikan\\Model\\Anime\\AnimeVideos\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch episodes \n promo videos related to One Piece (MAL ID: 21)\n\n\n$videos\n \n=\n \n$jikan\n-\nAnimeVideos\n(\n1\n);\n\n\n\n// Episodes\n\n\nvar_dump\n(\n\n    \n$videos\n-\ngetEpisodes\n()\n\n\n);\n\n\n\n// Promo Videos\n\n\nvar_dump\n(\n\n    \n$videos\n-\ngetPromos\n()\n\n\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeVideos\n\n\n?php\n\n\n\n$videos\n \n=\n \n$jikan\n-\ngetAnimeVideos\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeVideosRequest\n(\n1\n))\n\n\n);\n\n\n\n// Episodes\n\n\nvar_dump\n(\n\n    \n$videos\n-\ngetEpisodes\n()\n\n\n);\n\n\n\n// Promo Videos\n\n\nvar_dump\n(\n\n    \n$videos\n-\ngetPromos\n()\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Anime\\AnimeVideosRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Anime\\AnimeVideos", 
            "title": "Videos"
        }, 
        {
            "location": "/usage/anime/videos/#anime-videos", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/video  Response:   \\Jikan\\Model\\Anime\\AnimeVideos", 
            "title": "Anime: Videos"
        }, 
        {
            "location": "/usage/anime/videos/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch episodes   promo videos related to One Piece (MAL ID: 21)  $videos   =   $jikan - AnimeVideos ( 1 );  // Episodes  var_dump ( \n     $videos - getEpisodes ()  );  // Promo Videos  var_dump ( \n     $videos - getPromos ()  );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/videos/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeVideos  ?php  $videos   =   $jikan - getAnimeVideos ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeVideosRequest ( 1 ))  );  // Episodes  var_dump ( \n     $videos - getEpisodes ()  );  // Promo Videos  var_dump ( \n     $videos - getPromos ()  );       Request:  \\Jikan\\Request\\Anime\\AnimeVideosRequest    Model:  \\Jikan\\Model\\Anime\\AnimeVideos", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/pictures/", 
            "text": "Anime: Pictures\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/pics\n\n\nResponse:\n \n\\Jikan\\Model\\Common\\Picture[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch pictures related to One Piece (MAL ID: 21)\n\n\n$pics\n \n=\n \n$jikan\n-\nAnimePictures\n(\n21\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimePicturesRequest\n\n\n?php\n\n\n\n$pics\n \n=\n \n$jikan\n-\ngetAnimePictures\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimePicturesRequest\n(\n21\n))\n\n\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Request\\Anime\\AnimePicturesRequest\n\n\n\n\n\n\n\\Jikan\\Model\\Common\\Picture", 
            "title": "Pictures"
        }, 
        {
            "location": "/usage/anime/pictures/#anime-pictures", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/pics  Response:   \\Jikan\\Model\\Common\\Picture[]", 
            "title": "Anime: Pictures"
        }, 
        {
            "location": "/usage/anime/pictures/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch pictures related to One Piece (MAL ID: 21)  $pics   =   $jikan - AnimePictures ( 21 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/pictures/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimePicturesRequest  ?php  $pics   =   $jikan - getAnimePictures ( \n     ( new   \\Jikan\\Request\\Anime\\AnimePicturesRequest ( 21 ))  );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }       \\Jikan\\Request\\Anime\\AnimePicturesRequest    \\Jikan\\Model\\Common\\Picture", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/stats/", 
            "text": "Anime: Stats\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/stats\n\n\nResponse:\n \n\\Jikan\\Model\\Anime\\AnimeStats\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch One Piece\ns (MAL ID: 21) stats\n\n\n$stats\n \n=\n \n$jikan\n-\nAnimeStats\n(\n21\n);\n\n\n\necho\n \nWatching: \n \n.\n \n$stats\n-\ngetWatching\n();\n\n\necho\n \nRated 10/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n10\n]\n-\ngetVotes\n();\n\n\necho\n \nRated 1/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n1\n]\n-\ngetVotes\n();\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeStatsRequest\n\n\n?php\n\n\n\n$stats\n \n=\n \n$jikan\n-\ngetAnimeStats\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeStatsRequest\n(\n21\n))\n\n\n);\n\n\n\necho\n \nWatching: \n \n.\n \n$stats\n-\ngetWatching\n();\n\n\necho\n \nRated 10/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n10\n]\n-\ngetVotes\n();\n\n\necho\n \nRated 1/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n1\n]\n-\ngetVotes\n();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Anime\\AnimeStatsRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Anime\\AnimeStats", 
            "title": "Stats"
        }, 
        {
            "location": "/usage/anime/stats/#anime-stats", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/stats  Response:   \\Jikan\\Model\\Anime\\AnimeStats", 
            "title": "Anime: Stats"
        }, 
        {
            "location": "/usage/anime/stats/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch One Piece s (MAL ID: 21) stats  $stats   =   $jikan - AnimeStats ( 21 );  echo   Watching:    .   $stats - getWatching ();  echo   Rated 10/10:    .   $stats - getScores ()[ 10 ] - getVotes ();  echo   Rated 1/10:    .   $stats - getScores ()[ 1 ] - getVotes ();", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/stats/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeStatsRequest  ?php  $stats   =   $jikan - getAnimeStats ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeStatsRequest ( 21 ))  );  echo   Watching:    .   $stats - getWatching ();  echo   Rated 10/10:    .   $stats - getScores ()[ 10 ] - getVotes ();  echo   Rated 1/10:    .   $stats - getScores ()[ 1 ] - getVotes ();       Request:  \\Jikan\\Request\\Anime\\AnimeStatsRequest    Model:  \\Jikan\\Model\\Anime\\AnimeStats", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/anime/more-info/", 
            "text": "Anime: More Info\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/anime/{id}/_/moreinfo\n\n\nResponse:\n \nstring\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// More/Misc Info on One Piece (MAL ID: 21) \n\n\necho\n \n$jikan\n-\nAnimeMoreInfo\n(\n21\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Anime\\AnimeMoreInfo\n\n\n?php\n\n\n\necho\n \n$jikan\n-\ngetAnimeMoreInfo\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeMoreInfoRequest\n(\n21\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Anime\\AnimeMoreInfo\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Anime\\AnimeMoreInfo", 
            "title": "More Info"
        }, 
        {
            "location": "/usage/anime/more-info/#anime-more-info", 
            "text": "This method parses item data by ID from  https://myanimelist.net/anime/{id}/_/moreinfo  Response:   string", 
            "title": "Anime: More Info"
        }, 
        {
            "location": "/usage/anime/more-info/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // More/Misc Info on One Piece (MAL ID: 21)   echo   $jikan - AnimeMoreInfo ( 21 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/anime/more-info/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Anime\\AnimeMoreInfo  ?php  echo   $jikan - getAnimeMoreInfo ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeMoreInfoRequest ( 21 ))  );       Request:  \\Jikan\\Request\\Anime\\AnimeMoreInfo    Model:  \\Jikan\\Model\\Anime\\AnimeMoreInfo", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/main/", 
            "text": "Manga: Main\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Manga\\Manga\n\n\nUsage: Legacy\n\n\nArgument:\n \nint\n\n\n?php\n\n\n\n// Fetch Naruto\ns (MAL ID: 11) data from it\ns main page\n\n\n$manga\n \n=\n \n$jikan\n-\nManga\n(\n11\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Manga\\MangaRequest\n\n\n?php\n\n\n\n$manga\n \n=\n \n$jikan\n-\ngetManga\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaRequest\n(\n11\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Manga\\MangaRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Manga\\Manga", 
            "title": "Manga"
        }, 
        {
            "location": "/usage/manga/main/#manga-main", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}  Response:   \\Jikan\\Model\\Manga\\Manga", 
            "title": "Manga: Main"
        }, 
        {
            "location": "/usage/manga/main/#usage-legacy", 
            "text": "Argument:   int  ?php  // Fetch Naruto s (MAL ID: 11) data from it s main page  $manga   =   $jikan - Manga ( 11 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/main/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Manga\\MangaRequest  ?php  $manga   =   $jikan - getManga ( \n     ( new   \\Jikan\\Request\\Manga\\MangaRequest ( 11 ))  );       Request:  \\Jikan\\Request\\Manga\\MangaRequest    Model:  \\Jikan\\Model\\Manga\\Manga", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/characters/", 
            "text": "Manga: Characters\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}/_/characters\n\n\nResponse:\n \n\\Jikan\\Model\\Manga\\CharacterListItem[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch Naruto\ns (MAL ID: 11) characters\n\n\n$characters\n \n=\n \n$jikan\n-\nMangaCharacters\n(\n11\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Manga\\AnimeCharactersAndStaff\n\n\n?php\n\n\n\n$characters\n \n=\n \n$jikan\n-\ngetMangaCharacters\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaCharactersRequest\n(\n11\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Manga\\MangaCharactersRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Manga\\CharacterListItem", 
            "title": "Characters"
        }, 
        {
            "location": "/usage/manga/characters/#manga-characters", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}/_/characters  Response:   \\Jikan\\Model\\Manga\\CharacterListItem[]", 
            "title": "Manga: Characters"
        }, 
        {
            "location": "/usage/manga/characters/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch Naruto s (MAL ID: 11) characters  $characters   =   $jikan - MangaCharacters ( 11 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/characters/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Manga\\AnimeCharactersAndStaff  ?php  $characters   =   $jikan - getMangaCharacters ( \n     ( new   \\Jikan\\Request\\Manga\\MangaCharactersRequest ( 11 ))  );       Request:  \\Jikan\\Request\\Manga\\MangaCharactersRequest    Model:  \\Jikan\\Model\\Manga\\CharacterListItem", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/news/", 
            "text": "Manga: News\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}/_/news\n\n\nResponse:\n \n\\Jikan\\Model\\News\\NewsListItem[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch news articles related to Naruto (MAL ID: 11) \n\n\n$news\n \n=\n \n$jikan\n-\nMangaNews\n(\n1\n);\n\n\n\nforeach\n(\n$news\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \n$topic\n-\ngetIntro\n();\n\n\n    \necho\n \nAuthor: \n \n.\n \n$topic\n-\ngetAuthor\n()\n-\ngetName\n();\n\n\n}\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Manga\\MangaNewsRequest\n\n\n?php\n\n\n\n$news\n \n=\n \n$jikan\n-\ngetNewsList\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaNewsRequest\n(\n11\n))\n\n\n);\n\n\n\nforeach\n(\n$news\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \n$topic\n-\ngetIntro\n();\n\n\n    \necho\n \nAuthor: \n \n.\n \n$topic\n-\ngetAuthor\n()\n-\ngetName\n();\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Request\\Manga\\MangaNewsRequest\n\n\n\n\n\n\n\\Jikan\\Model\\News\\NewsListItem", 
            "title": "News"
        }, 
        {
            "location": "/usage/manga/news/#manga-news", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}/_/news  Response:   \\Jikan\\Model\\News\\NewsListItem[]", 
            "title": "Manga: News"
        }, 
        {
            "location": "/usage/manga/news/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch news articles related to Naruto (MAL ID: 11)   $news   =   $jikan - MangaNews ( 1 );  foreach ( $news   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   $topic - getIntro (); \n\n     echo   Author:    .   $topic - getAuthor () - getName ();  }", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/news/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Manga\\MangaNewsRequest  ?php  $news   =   $jikan - getNewsList ( \n     ( new   \\Jikan\\Request\\Manga\\MangaNewsRequest ( 11 ))  );  foreach ( $news   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   $topic - getIntro (); \n\n     echo   Author:    .   $topic - getAuthor () - getName ();  }       \\Jikan\\Request\\Manga\\MangaNewsRequest    \\Jikan\\Model\\News\\NewsListItem", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/forum/", 
            "text": "Manga: Forum\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}/_/forum\n\n\nResponse:\n \n\\Jikan\\Model\\Forum\\ForumTopic[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch forum topics related to Naruto (MAL ID: 11) \n\n\n$topics\n \n=\n \n$jikan\n-\nMangaForum\n(\n1\n);\n\n\n\nforeach\n(\n$topics\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \nReplies: \n \n.\n \n$topic\n-\ngetReplies\n();\n\n\n    \necho\n \nLast post by: \n \n.\n \n$topic\n-\nlastPost\n()\n-\ngetAuthorName\n();\n\n\n}\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Manga\\MangaForumRequest\n\n\n?php\n\n\n\n$topics\n \n=\n \n$jikan\n-\ngetMangaForum\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaForumRequest\n(\n11\n))\n\n\n);\n\n\n\nforeach\n(\n$topics\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \nReplies: \n \n.\n \n$topic\n-\ngetReplies\n();\n\n\n    \necho\n \nLast post by: \n \n.\n \n$topic\n-\nlastPost\n()\n-\ngetAuthorName\n();\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Request\\Anime\\AnimeNewsRequest\n\n\n\n\n\n\n\\Jikan\\Model\\Forum\\ForumTopic", 
            "title": "Forum"
        }, 
        {
            "location": "/usage/manga/forum/#manga-forum", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}/_/forum  Response:   \\Jikan\\Model\\Forum\\ForumTopic[]", 
            "title": "Manga: Forum"
        }, 
        {
            "location": "/usage/manga/forum/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch forum topics related to Naruto (MAL ID: 11)   $topics   =   $jikan - MangaForum ( 1 );  foreach ( $topics   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   Replies:    .   $topic - getReplies (); \n\n     echo   Last post by:    .   $topic - lastPost () - getAuthorName ();  }", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/forum/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Manga\\MangaForumRequest  ?php  $topics   =   $jikan - getMangaForum ( \n     ( new   \\Jikan\\Request\\Manga\\MangaForumRequest ( 11 ))  );  foreach ( $topics   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   Replies:    .   $topic - getReplies (); \n\n     echo   Last post by:    .   $topic - lastPost () - getAuthorName ();  }       \\Jikan\\Request\\Anime\\AnimeNewsRequest    \\Jikan\\Model\\Forum\\ForumTopic", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/pictures/", 
            "text": "Manga: Pictures\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}/_/pics\n\n\nResponse:\n \n\\Jikan\\Model\\Common\\Picture[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch pictures related to One Piece (MAL ID: 11)\n\n\n$pics\n \n=\n \n$jikan\n-\nMangaPictures\n(\n11\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Manga\\MangaPicturesRequest\n\n\n?php\n\n\n\n$pics\n \n=\n \n$jikan\n-\ngetMangaPictures\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Magna\\MangaPicturesRequest\n(\n11\n))\n\n\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Request\\Anime\\AnimePicturesRequest\n\n\n\n\n\n\n\\Jikan\\Model\\Common\\Picture", 
            "title": "Pictures"
        }, 
        {
            "location": "/usage/manga/pictures/#manga-pictures", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}/_/pics  Response:   \\Jikan\\Model\\Common\\Picture[]", 
            "title": "Manga: Pictures"
        }, 
        {
            "location": "/usage/manga/pictures/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch pictures related to One Piece (MAL ID: 11)  $pics   =   $jikan - MangaPictures ( 11 );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/pictures/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Manga\\MangaPicturesRequest  ?php  $pics   =   $jikan - getMangaPictures ( \n     ( new   \\Jikan\\Request\\Magna\\MangaPicturesRequest ( 11 ))  );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }       \\Jikan\\Request\\Anime\\AnimePicturesRequest    \\Jikan\\Model\\Common\\Picture", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/stats/", 
            "text": "Manga: Stats\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}/_/stats\n\n\nResponse:\n \n\\Jikan\\Model\\Manga\\MangaStats\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch Naruto\ns (MAL ID: 21) stats\n\n\n$stats\n \n=\n \n$jikan\n-\nMangaStats\n(\n21\n);\n\n\n\necho\n \nReading: \n \n.\n \n$stats\n-\ngetReading\n();\n\n\necho\n \nRated 10/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n10\n]\n-\ngetVotes\n();\n\n\necho\n \nRated 1/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n1\n]\n-\ngetVotes\n();\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Manga\\MangaStatsRequest\n\n\n?php\n\n\n\n$stats\n \n=\n \n$jikan\n-\ngetMangaStats\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaStatsRequest\n(\n11\n))\n\n\n);\n\n\n\necho\n \nReading: \n \n.\n \n$stats\n-\ngetReading\n();\n\n\necho\n \nRated 10/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n10\n]\n-\ngetVotes\n();\n\n\necho\n \nRated 1/10: \n \n.\n \n$stats\n-\ngetScores\n()[\n1\n]\n-\ngetVotes\n();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Manga\\MangaStatsRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Manga\\MangaStats", 
            "title": "Stats"
        }, 
        {
            "location": "/usage/manga/stats/#manga-stats", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}/_/stats  Response:   \\Jikan\\Model\\Manga\\MangaStats", 
            "title": "Manga: Stats"
        }, 
        {
            "location": "/usage/manga/stats/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch Naruto s (MAL ID: 21) stats  $stats   =   $jikan - MangaStats ( 21 );  echo   Reading:    .   $stats - getReading ();  echo   Rated 10/10:    .   $stats - getScores ()[ 10 ] - getVotes ();  echo   Rated 1/10:    .   $stats - getScores ()[ 1 ] - getVotes ();", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/stats/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Manga\\MangaStatsRequest  ?php  $stats   =   $jikan - getMangaStats ( \n     ( new   \\Jikan\\Request\\Manga\\MangaStatsRequest ( 11 ))  );  echo   Reading:    .   $stats - getReading ();  echo   Rated 10/10:    .   $stats - getScores ()[ 10 ] - getVotes ();  echo   Rated 1/10:    .   $stats - getScores ()[ 1 ] - getVotes ();       Request:  \\Jikan\\Request\\Manga\\MangaStatsRequest    Model:  \\Jikan\\Model\\Manga\\MangaStats", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/manga/more-info/", 
            "text": "Manga: More Info\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/manga/{id}/_/moreinfo\n\n\nResponse:\n \nstring\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// More/Misc Info on Naruto (MAL ID: 21) \n\n\necho\n \n$jikan\n-\nMangaMoreInfo\n(\n11\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Manga\\MangaMoreInfoRequest\n\n\n?php\n\n\n\necho\n \n$jikan\n-\ngetMangaMoreInfo\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaMoreInfoRequest\n(\n11\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Manga\\MangaMoreInfo\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Manga\\MangaMoreInfo", 
            "title": "More Info"
        }, 
        {
            "location": "/usage/manga/more-info/#manga-more-info", 
            "text": "This method parses item data by ID from  https://myanimelist.net/manga/{id}/_/moreinfo  Response:   string", 
            "title": "Manga: More Info"
        }, 
        {
            "location": "/usage/manga/more-info/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // More/Misc Info on Naruto (MAL ID: 21)   echo   $jikan - MangaMoreInfo ( 11 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/manga/more-info/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Manga\\MangaMoreInfoRequest  ?php  echo   $jikan - getMangaMoreInfo ( \n     ( new   \\Jikan\\Request\\Manga\\MangaMoreInfoRequest ( 11 ))  );       Request:  \\Jikan\\Request\\Manga\\MangaMoreInfo    Model:  \\Jikan\\Model\\Manga\\MangaMoreInfo", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/character/main/", 
            "text": "Character: Main\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/character/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Character\\Character\n\n\nUsage: Legacy\n\n\nArgument:\n \nint\n\n\n?php\n\n\n\n// Fetch Spike Spiegel\ns (MAL ID: 1) data from it\ns main page\n\n\n$character\n \n=\n \n$jikan\n-\nCharacter\n(\n1\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Character\\CharacterRequest\n\n\n?php\n\n\n\n$character\n \n=\n \n$jikan\n-\ngetCharacter\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Character\\CharacterRequest\n(\n1\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Character\\CharacterRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Character\\Character", 
            "title": "Character"
        }, 
        {
            "location": "/usage/character/main/#character-main", 
            "text": "This method parses item data by ID from  https://myanimelist.net/character/{id}  Response:   \\Jikan\\Model\\Character\\Character", 
            "title": "Character: Main"
        }, 
        {
            "location": "/usage/character/main/#usage-legacy", 
            "text": "Argument:   int  ?php  // Fetch Spike Spiegel s (MAL ID: 1) data from it s main page  $character   =   $jikan - Character ( 1 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/character/main/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Character\\CharacterRequest  ?php  $character   =   $jikan - getCharacter ( \n     ( new   \\Jikan\\Request\\Character\\CharacterRequest ( 1 ))  );       Request:  \\Jikan\\Request\\Character\\CharacterRequest    Model:  \\Jikan\\Model\\Character\\Character", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/character/pictures/", 
            "text": "Character: Pictures\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/character/{id}/_/pictures\n\n\nResponse\n \n1\n\\Jikan\\Model\\Common\\Picture[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch pictures related to Spike Spiegel (MAL ID: 1)\n\n\n$pics\n \n=\n \n$jikan\n-\nCharacterPictures\n(\n1\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Character\\CharacterPicturesRequest\n\n\n?php\n\n\n\n$pics\n \n=\n \n$jikan\n-\ngetCharacterPictures\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Character\\CharacterPicturesRequest\n(\n1\n))\n\n\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Common\\Picture", 
            "title": "Pictures"
        }, 
        {
            "location": "/usage/character/pictures/#character-pictures", 
            "text": "This method parses item data by ID from  https://myanimelist.net/character/{id}/_/pictures  Response   1 \\Jikan\\Model\\Common\\Picture[]", 
            "title": "Character: Pictures"
        }, 
        {
            "location": "/usage/character/pictures/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch pictures related to Spike Spiegel (MAL ID: 1)  $pics   =   $jikan - CharacterPictures ( 1 );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/character/pictures/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Character\\CharacterPicturesRequest  ?php  $pics   =   $jikan - getCharacterPictures ( \n     ( new   \\Jikan\\Request\\Character\\CharacterPicturesRequest ( 1 ))  );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }       \\Jikan\\Model\\Common\\Picture", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/person/main/", 
            "text": "Person: Main\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/people/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Person\\Person\n\n\nUsage: Legacy\n\n\nArgument:\n \nint\n\n\n?php\n\n\n\n// Fetch Seki, Tomokazu\ns (MAL ID: 1) data from it\ns main page\n\n\n$person\n \n=\n \n$jikan\n-\nPerson\n(\n1\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Person\\PersonRequest\n\n\n?php\n\n\n\n$person\n \n=\n \n$jikan\n-\ngetPerson\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Person\\PersonRequest\n(\n1\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Person\\PersonRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Person\\Person", 
            "title": "Person"
        }, 
        {
            "location": "/usage/person/main/#person-main", 
            "text": "This method parses item data by ID from  https://myanimelist.net/people/{id}  Response:   \\Jikan\\Model\\Person\\Person", 
            "title": "Person: Main"
        }, 
        {
            "location": "/usage/person/main/#usage-legacy", 
            "text": "Argument:   int  ?php  // Fetch Seki, Tomokazu s (MAL ID: 1) data from it s main page  $person   =   $jikan - Person ( 1 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/person/main/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Person\\PersonRequest  ?php  $person   =   $jikan - getPerson ( \n     ( new   \\Jikan\\Request\\Person\\PersonRequest ( 1 ))  );       Request:  \\Jikan\\Request\\Person\\PersonRequest    Model:  \\Jikan\\Model\\Person\\Person", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/person/pictures/", 
            "text": "Person: Pictures\n\n\nThis method parses item data by ID from \nhttps://myanimelist.net/people/{id}/_/pictures\n\n\nResponse\n \n1\n\\Jikan\\Model\\Common\\Picture[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n\n\n?php\n\n\n\n// Fetch pictures related to Spike Spiegel (MAL ID: 1)\n\n\n$pics\n \n=\n \n$jikan\n-\nPersonPictures\n(\n1\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\nUsage: Standard\n\n\nArguments:\n \n\\Jikan\\Request\\Person\\PersonPictures\n\n\n?php\n\n\n\n$pics\n \n=\n \n$jikan\n-\ngetPersonPictures\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Person\\PersonPicturesRequest\n(\n1\n))\n\n\n);\n\n\n\nforeach\n(\n$pictures\n \nas\n \n$picture\n)\n \n{\n\n    \necho\n \nimg src=\n \n.\n \n$picture\n-\ngetLarge\n()\n \n.\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Common\\Picture", 
            "title": "Pictures"
        }, 
        {
            "location": "/usage/person/pictures/#person-pictures", 
            "text": "This method parses item data by ID from  https://myanimelist.net/people/{id}/_/pictures  Response   1 \\Jikan\\Model\\Common\\Picture[]", 
            "title": "Person: Pictures"
        }, 
        {
            "location": "/usage/person/pictures/#usage-legacy", 
            "text": "Arguments:   int $id  ?php  // Fetch pictures related to Spike Spiegel (MAL ID: 1)  $pics   =   $jikan - PersonPictures ( 1 );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/person/pictures/#usage-standard", 
            "text": "Arguments:   \\Jikan\\Request\\Person\\PersonPictures  ?php  $pics   =   $jikan - getPersonPictures ( \n     ( new   \\Jikan\\Request\\Person\\PersonPicturesRequest ( 1 ))  );  foreach ( $pictures   as   $picture )   { \n     echo   img src=   .   $picture - getLarge ()   . ;  }       \\Jikan\\Model\\Common\\Picture", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/search/anime/", 
            "text": "Search: Anime\n\n\nThis method parses search results from \nhttps://myanimelist.net/anime.php?q={query}\n\n\nResponse:\n \n\\Jikan\\Model\\Search\\AnimeSearch\n\n\nUsage: Legacy\n\n\nArguments:\n \nstring $query\n, \nint $page\n, \n\\Jikan\\Request\\Search\\AnimeSearchRequest $request = NULL\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n// Search results for \nNo Game No Life\n\n\n$animeSearchResults\n \n=\n \n$jikan\n-\nAnimeSearch\n(\nNo Game No Life\n);\n\n\n\n// Search results from page 2\n\n\n$animeSearchResults\n \n=\n \n$jikan\n-\nAnimeSearch\n(\nNo Game No Life\n,\n \n2\n);\n\n\n\n// Advanced Search (Filters)\n\n\n// Only movies\n\n\n$animeSearchResults\n \n=\n \n$jikan\n-\nAnimeSearch\n(\nNo Game No Life\n,\n \n1\n,\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\AnimeSearchRequest\n())\n\n        \n-\nsetType\n(\nConstants\n::\nSEARCH_FILTER_MOVIES\n);\n\n\n\n// Search for anime movies WITHOUT any queries\n\n\n// that have the genres `Fantasy` and `Adventure`\n\n\n// that have ratings above 8\n\n\n$animeSearchResults\n \n=\n \n$jikan\n-\nAnimeSearch\n(\nnull\n,\n \n1\n,\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\AnimeSearchRequest\n())\n\n        \n-\nsetType\n(\nConstants\n::\nSEARCH_FILTER_MOVIES\n)\n\n        \n-\nsetGenre\n(\nConstants\n::\nGENRE_FANTASY\n,\n \nConstants\n::\nGENRE_ADVENTURE\n)\n\n        \n-\nsetScore\n(\n8\n);\n\n\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Search\\AnimeSearchRequest\n\n\n?php\n\n\n\n$animeSearchResults\n \n=\n \n$jikan\n-\ngetAnimeSearch\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\AnimeSearchRequest\n(\nNo Game No Life\n));\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Search\\AnimeSearchRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Search\\AnimeSearch", 
            "title": "Anime"
        }, 
        {
            "location": "/usage/search/anime/#search-anime", 
            "text": "This method parses search results from  https://myanimelist.net/anime.php?q={query}  Response:   \\Jikan\\Model\\Search\\AnimeSearch", 
            "title": "Search: Anime"
        }, 
        {
            "location": "/usage/search/anime/#usage-legacy", 
            "text": "Arguments:   string $query ,  int $page ,  \\Jikan\\Request\\Search\\AnimeSearchRequest $request = NULL  ?php  use   \\Jikan\\Helper\\Constants ;  // Search results for  No Game No Life  $animeSearchResults   =   $jikan - AnimeSearch ( No Game No Life );  // Search results from page 2  $animeSearchResults   =   $jikan - AnimeSearch ( No Game No Life ,   2 );  // Advanced Search (Filters)  // Only movies  $animeSearchResults   =   $jikan - AnimeSearch ( No Game No Life ,   1 , \n     ( new   \\Jikan\\Request\\Search\\AnimeSearchRequest ()) \n         - setType ( Constants :: SEARCH_FILTER_MOVIES );  // Search for anime movies WITHOUT any queries  // that have the genres `Fantasy` and `Adventure`  // that have ratings above 8  $animeSearchResults   =   $jikan - AnimeSearch ( null ,   1 , \n     ( new   \\Jikan\\Request\\Search\\AnimeSearchRequest ()) \n         - setType ( Constants :: SEARCH_FILTER_MOVIES ) \n         - setGenre ( Constants :: GENRE_FANTASY ,   Constants :: GENRE_ADVENTURE ) \n         - setScore ( 8 );  );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/search/anime/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Search\\AnimeSearchRequest  ?php  $animeSearchResults   =   $jikan - getAnimeSearch ( \n     ( new   \\Jikan\\Request\\Search\\AnimeSearchRequest ( No Game No Life ));  );       Request:  \\Jikan\\Request\\Search\\AnimeSearchRequest    Model:  \\Jikan\\Model\\Search\\AnimeSearch", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/search/manga/", 
            "text": "Search: Manga\n\n\nThis method parses search results from \nhttps://myanimelist.net/manga.php?q={query}\n\n\nResponse:\n \n\\Jikan\\Model\\Search\\MangaSearch\n\n\nUsage: Legacy\n\n\nArguments:\n \nstring $query\n, \nint $page\n, \n\\Jikan\\Request\\Search\\MangaSearchRequest $request = NULL\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n// Search results for \nOyasumi Punpun\n\n\n$mangaSearchResults\n \n=\n \n$jikan\n-\nMangaSearch\n(\nOyasumi Punpun\n);\n\n\n\n// Search results from page 2\n\n\n$mangaSearchResults\n \n=\n \n$jikan\n-\nMangaSearch\n(\nOyasumi Punpun\n,\n \n2\n);\n\n\n\n// Advanced Search (Filters)\n\n\n// Only manga\n\n\n$mangaSearchResults\n \n=\n \n$jikan\n-\nMangaSearch\n(\nOyasumi Punpun\n,\n \n1\n,\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\MangaSearchRequest\n())\n\n        \n-\nsetType\n(\nConstants\n::\nSEARCH_FILTER_MANGA\n);\n\n\n\n// Search for manga WITHOUT any queries\n\n\n// that have the genres `Fantasy` and `Adventure`\n\n\n// that have ratings above 8\n\n\n$mangaSearchResults\n \n=\n \n$jikan\n-\nMangaSearch\n(\nnull\n,\n \n1\n,\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\MangaSearchRequest\n())\n\n        \n-\nsetType\n(\nConstants\n::\nSEARCH_FILTER_MANGA\n)\n\n        \n-\nsetGenre\n(\nConstants\n::\nGENRE_FANTASY\n,\n \nConstants\n::\nGENRE_ADVENTURE\n)\n\n        \n-\nsetScore\n(\n8\n);\n\n\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Search\\MangaSearchRequest\n\n\n?php\n\n\n\n$mangaSearchResults\n \n=\n \n$jikan\n-\ngetMangaSearch\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\MangaSearchRequest\n(\nOyasumi Punpun\n));\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Search\\MangaSearchRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Search\\MangaSearch", 
            "title": "Manga"
        }, 
        {
            "location": "/usage/search/manga/#search-manga", 
            "text": "This method parses search results from  https://myanimelist.net/manga.php?q={query}  Response:   \\Jikan\\Model\\Search\\MangaSearch", 
            "title": "Search: Manga"
        }, 
        {
            "location": "/usage/search/manga/#usage-legacy", 
            "text": "Arguments:   string $query ,  int $page ,  \\Jikan\\Request\\Search\\MangaSearchRequest $request = NULL  ?php  use   \\Jikan\\Helper\\Constants ;  // Search results for  Oyasumi Punpun  $mangaSearchResults   =   $jikan - MangaSearch ( Oyasumi Punpun );  // Search results from page 2  $mangaSearchResults   =   $jikan - MangaSearch ( Oyasumi Punpun ,   2 );  // Advanced Search (Filters)  // Only manga  $mangaSearchResults   =   $jikan - MangaSearch ( Oyasumi Punpun ,   1 , \n     ( new   \\Jikan\\Request\\Search\\MangaSearchRequest ()) \n         - setType ( Constants :: SEARCH_FILTER_MANGA );  // Search for manga WITHOUT any queries  // that have the genres `Fantasy` and `Adventure`  // that have ratings above 8  $mangaSearchResults   =   $jikan - MangaSearch ( null ,   1 , \n     ( new   \\Jikan\\Request\\Search\\MangaSearchRequest ()) \n         - setType ( Constants :: SEARCH_FILTER_MANGA ) \n         - setGenre ( Constants :: GENRE_FANTASY ,   Constants :: GENRE_ADVENTURE ) \n         - setScore ( 8 );  );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/search/manga/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Search\\MangaSearchRequest  ?php  $mangaSearchResults   =   $jikan - getMangaSearch ( \n     ( new   \\Jikan\\Request\\Search\\MangaSearchRequest ( Oyasumi Punpun ));  );       Request:  \\Jikan\\Request\\Search\\MangaSearchRequest    Model:  \\Jikan\\Model\\Search\\MangaSearch", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/search/character/", 
            "text": "Search: Character\n\n\nThis method parses search results from \nhttps://myanimelist.net/character.php?q={query}\n\n\nResponse:\n \n\\Jikan\\Model\\Search\\CharacterSearch\n\n\nUsage: Legacy\n\n\nArguments:\n \nstring $query\n, \nint $page\n\n\n?php\n\n\n// Search results for \nLelouch\n\n\n$characterSearchResults\n \n=\n \n$jikan\n-\nCharacterSearch\n(\nLelouch\n);\n\n\n\n// Search results from page 2\n\n\n$characterSearchResults\n \n=\n \n$jikan\n-\nCharacterSearch\n(\nLelouch\n,\n \n2\n);\n\n\n\n// There\ns no Advanced search (filters) for Character results\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Search\\CharacterSearchRequest(\n\n\n?php\n\n\n\n$characterSearchResults\n \n=\n \n$jikan\n-\ngetCharacterSearch\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\CharacterSearchRequest\n(\nlelouch\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Search\\CharacterSearchRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Search\\CharacterSearch", 
            "title": "Character"
        }, 
        {
            "location": "/usage/search/character/#search-character", 
            "text": "This method parses search results from  https://myanimelist.net/character.php?q={query}  Response:   \\Jikan\\Model\\Search\\CharacterSearch", 
            "title": "Search: Character"
        }, 
        {
            "location": "/usage/search/character/#usage-legacy", 
            "text": "Arguments:   string $query ,  int $page  ?php  // Search results for  Lelouch  $characterSearchResults   =   $jikan - CharacterSearch ( Lelouch );  // Search results from page 2  $characterSearchResults   =   $jikan - CharacterSearch ( Lelouch ,   2 );  // There s no Advanced search (filters) for Character results", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/search/character/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Search\\CharacterSearchRequest(  ?php  $characterSearchResults   =   $jikan - getCharacterSearch ( \n     ( new   \\Jikan\\Request\\Search\\CharacterSearchRequest ( lelouch ))  );       Request:  \\Jikan\\Request\\Search\\CharacterSearchRequest    Model:  \\Jikan\\Model\\Search\\CharacterSearch", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/search/person/", 
            "text": "Search: Person\n\n\nThis method parses search results from \nhttps://myanimelist.net/people.php?q={query}\n\n\nResponse:\n \n\\Jikan\\Model\\Search\\PersonSearch\n\n\nUsage: Legacy\n\n\nArguments:\n \nstring $query\n, \nint $page\n\n\n?php\n\n\n// Search results for \nSawashiro\n\n\n$personSearchResults\n \n=\n \n$jikan\n-\nPersonSearch\n(\nsawashiro\n);\n\n\n\n// Search results from page 2\n\n\n$personSearchResults\n \n=\n \n$jikan\n-\nPersonSearch\n(\nsawashiro\n,\n \n2\n);\n\n\n\n// There\ns no Advanced search (filters) for Person results\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Search\\PersonSearchRequest\n\n\n?php\n\n\n\n$personSearchResults\n \n=\n \n$jikan\n-\ngetPersonSearch\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Search\\PersonSearchRequest\n(\nsawashiro\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Search\\PersonSearchRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Search\\PersonSearch", 
            "title": "Person"
        }, 
        {
            "location": "/usage/search/person/#search-person", 
            "text": "This method parses search results from  https://myanimelist.net/people.php?q={query}  Response:   \\Jikan\\Model\\Search\\PersonSearch", 
            "title": "Search: Person"
        }, 
        {
            "location": "/usage/search/person/#usage-legacy", 
            "text": "Arguments:   string $query ,  int $page  ?php  // Search results for  Sawashiro  $personSearchResults   =   $jikan - PersonSearch ( sawashiro );  // Search results from page 2  $personSearchResults   =   $jikan - PersonSearch ( sawashiro ,   2 );  // There s no Advanced search (filters) for Person results", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/search/person/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Search\\PersonSearchRequest  ?php  $personSearchResults   =   $jikan - getPersonSearch ( \n     ( new   \\Jikan\\Request\\Search\\PersonSearchRequest ( sawashiro ))  );       Request:  \\Jikan\\Request\\Search\\PersonSearchRequest    Model:  \\Jikan\\Model\\Search\\PersonSearch", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/seasonal/", 
            "text": "Seasonal\n\n\nThis method parses seasonal anime from \nhttps://myanimelist.net/anime/season\n\n\nResponse:\n \n\\Jikan\\Model\\Search\\PersonSearch\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $year\n, \nstring $season\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n// Anime this season\n\n\n$season\n \n=\n \n$jikan\n-\nSeasonal\n();\n\n\n\n// Anime from Winter 2017\n\n\n$season\n \n=\n \n$jikan\n-\nSeasonal\n(\n2017\n,\n \nConstants\n::\nSEASON_WINTER\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Model\\Seasonal\\Seasonal\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n$season\n \n=\n \n$jikan\n-\ngetSeasonal\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Seasonal\\SeasonalRequest\n(\n\n        \n2017\n,\n\n        \nConstants\n::\nWINTER\n\n    \n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Seasonal\\SeasonalRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Seasonal\\Producer", 
            "title": "Seasonal"
        }, 
        {
            "location": "/usage/seasonal/#seasonal", 
            "text": "This method parses seasonal anime from  https://myanimelist.net/anime/season  Response:   \\Jikan\\Model\\Search\\PersonSearch", 
            "title": "Seasonal"
        }, 
        {
            "location": "/usage/seasonal/#usage-legacy", 
            "text": "Arguments:   int $year ,  string $season  ?php  use   \\Jikan\\Helper\\Constants ;  // Anime this season  $season   =   $jikan - Seasonal ();  // Anime from Winter 2017  $season   =   $jikan - Seasonal ( 2017 ,   Constants :: SEASON_WINTER );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/seasonal/#usage-standard", 
            "text": "Argument:   \\Jikan\\Model\\Seasonal\\Seasonal  ?php  use   \\Jikan\\Helper\\Constants ;  $season   =   $jikan - getSeasonal ( \n     ( new   \\Jikan\\Request\\Seasonal\\SeasonalRequest ( \n         2017 , \n         Constants :: WINTER \n     ))  );       Request:  \\Jikan\\Request\\Seasonal\\SeasonalRequest    Model:  \\Jikan\\Model\\Seasonal\\Producer", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/schedule/", 
            "text": "Seasonal\n\n\nThis method parses anime schedule from \nhttps://myanimelist.net/anime/season/schedule\n\n\nResponse:\n \n\\Jikan\\Model\\Schedule\\Schedule\n\n\nUsage: Legacy\n\n\nArguments:\n None\n\n\n?php\n\n\n\n// Weekly Anime Schedule\n\n\n$schedule\n \n=\n \n$jikan\n-\ngetSchedule\n();\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Schedule\\ScheduleRequest\n\n\n?php\n\n\n$schedule\n \n=\n \n$jikan\n-\ngetSchedule\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Schedule\\ScheduleRequest\n())\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Schedule\\ScheduleRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Schedule\\Producer", 
            "title": "Schedule"
        }, 
        {
            "location": "/usage/schedule/#seasonal", 
            "text": "This method parses anime schedule from  https://myanimelist.net/anime/season/schedule  Response:   \\Jikan\\Model\\Schedule\\Schedule", 
            "title": "Seasonal"
        }, 
        {
            "location": "/usage/schedule/#usage-legacy", 
            "text": "Arguments:  None  ?php  // Weekly Anime Schedule  $schedule   =   $jikan - getSchedule ();", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/schedule/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Schedule\\ScheduleRequest  ?php  $schedule   =   $jikan - getSchedule ( \n     ( new   \\Jikan\\Request\\Schedule\\ScheduleRequest ())  );       Request:  \\Jikan\\Request\\Schedule\\ScheduleRequest    Model:  \\Jikan\\Model\\Schedule\\Producer", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/top/anime/", 
            "text": "Top: Anime\n\n\nThis method parses top anime from \nhttps://myanimelist.net/topanime.php\n\n\nResponse:\n \n\\Jikan\\Model\\Top\\TopAnime[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $page\n, \nstring $type\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n// Top anime\n\n\n$topAnime\n \n=\n \n$jikan\n-\nTopAnime\n();\n\n\n\n// Top anime page 2\n\n\n$topAnime\n \n=\n \n$jikan\n-\nTopAnime\n(\n2\n);\n\n\n\n// Top upcoming manga\n\n\n$topAnime\n \n=\n \n$jikan\n-\nTopAnime\n(\n1\n,\n \nConstants\n::\nTOP_UPCOMING\n);\n\n\n\n// Top anime movies\n\n\n$topAnime\n \n=\n \n$jikan\n-\nTopAnime\n(\n1\n,\n \nConstants\n::\nTOP_MOVIES\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Top\\TopAnimeRequest\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n$topAnime\n \n=\n \n$jikan\n-\ngetTopAnime\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Top\\TopAnimeRequest\n(\n\n        \n1\n,\n\n        \nConstants\n::\nTOP_UPCOMING\n\n    \n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Top\\TopAnime\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Top\\TopAnime", 
            "title": "Anime"
        }, 
        {
            "location": "/usage/top/anime/#top-anime", 
            "text": "This method parses top anime from  https://myanimelist.net/topanime.php  Response:   \\Jikan\\Model\\Top\\TopAnime[]", 
            "title": "Top: Anime"
        }, 
        {
            "location": "/usage/top/anime/#usage-legacy", 
            "text": "Arguments:   int $page ,  string $type  ?php  use   \\Jikan\\Helper\\Constants ;  // Top anime  $topAnime   =   $jikan - TopAnime ();  // Top anime page 2  $topAnime   =   $jikan - TopAnime ( 2 );  // Top upcoming manga  $topAnime   =   $jikan - TopAnime ( 1 ,   Constants :: TOP_UPCOMING );  // Top anime movies  $topAnime   =   $jikan - TopAnime ( 1 ,   Constants :: TOP_MOVIES );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/top/anime/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Top\\TopAnimeRequest  ?php  use   \\Jikan\\Helper\\Constants ;  $topAnime   =   $jikan - getTopAnime ( \n     ( new   \\Jikan\\Request\\Top\\TopAnimeRequest ( \n         1 , \n         Constants :: TOP_UPCOMING \n     ))  );       Request:  \\Jikan\\Request\\Top\\TopAnime    Model:  \\Jikan\\Model\\Top\\TopAnime", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/top/manga/", 
            "text": "Top: Manga\n\n\nThis method parses top manga from \nhttps://myanimelist.net/topmanga.php\n\n\nResponse:\n \n\\Jikan\\Model\\Top\\TopManga[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $page\n, \nstring $type\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n// Top manga\n\n\n$topManga\n \n=\n \n$jikan\n-\nTopManga\n();\n\n\n\n// Top manga page 2\n\n\n$topManga\n \n=\n \n$jikan\n-\nTopManga\n(\n2\n);\n\n\n\n// Top favorited manga\n\n\n$topManga\n \n=\n \n$jikan\n-\nTopManga\n(\n1\n,\n \nConstants\n::\nTOP_FAVORITES\n);\n\n\n\n// ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\n\n\n$topManga\n \n=\n \n$jikan\n-\nTopManga\n(\n1\n,\n \nConstants\n::\nTOP_DOUJINSHI\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Top\\TopMangaRequest\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n$topManga\n \n=\n \n$jikan\n-\ngetTopManga\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Top\\TopMangaRequest\n(\n\n        \n1\n,\n\n        \nConstants\n::\nTOP_MANGA\n \n// excludes novels, manhwa, manhua, etc\n\n    \n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Top\\TopManga\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Top\\TopManga", 
            "title": "Manga"
        }, 
        {
            "location": "/usage/top/manga/#top-manga", 
            "text": "This method parses top manga from  https://myanimelist.net/topmanga.php  Response:   \\Jikan\\Model\\Top\\TopManga[]", 
            "title": "Top: Manga"
        }, 
        {
            "location": "/usage/top/manga/#usage-legacy", 
            "text": "Arguments:   int $page ,  string $type  ?php  use   \\Jikan\\Helper\\Constants ;  // Top manga  $topManga   =   $jikan - TopManga ();  // Top manga page 2  $topManga   =   $jikan - TopManga ( 2 );  // Top favorited manga  $topManga   =   $jikan - TopManga ( 1 ,   Constants :: TOP_FAVORITES );  // ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)  $topManga   =   $jikan - TopManga ( 1 ,   Constants :: TOP_DOUJINSHI );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/top/manga/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Top\\TopMangaRequest  ?php  use   \\Jikan\\Helper\\Constants ;  $topManga   =   $jikan - getTopManga ( \n     ( new   \\Jikan\\Request\\Top\\TopMangaRequest ( \n         1 , \n         Constants :: TOP_MANGA   // excludes novels, manhwa, manhua, etc \n     ))  );       Request:  \\Jikan\\Request\\Top\\TopManga    Model:  \\Jikan\\Model\\Top\\TopManga", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/top/character/", 
            "text": "Top: Characters\n\n\nThis method parses top manga from \nhttps://myanimelist.net/character.php\n\n\nResponse:\n \n\\Jikan\\Model\\Top\\TopCharacter[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $page\n\n\n?php\n\n\n// Top characters\n\n\n$topCharacters\n \n=\n \n$jikan\n-\nTopCharacters\n();\n\n\n\n// Top characters page 2\n\n\n$topCharacters\n \n=\n \n$jikan\n-\nTopCharacters\n(\n2\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Top\\TopCharactersRequest\n\n\n?php\n\n\n\n$topCharacters\n \n=\n \n$jikan\n-\ngetTopCharacters\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Top\\TopCharactersRequest\n())\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Top\\TopCharacters\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Top\\TopCharacter", 
            "title": "Character"
        }, 
        {
            "location": "/usage/top/character/#top-characters", 
            "text": "This method parses top manga from  https://myanimelist.net/character.php  Response:   \\Jikan\\Model\\Top\\TopCharacter[]", 
            "title": "Top: Characters"
        }, 
        {
            "location": "/usage/top/character/#usage-legacy", 
            "text": "Arguments:   int $page  ?php  // Top characters  $topCharacters   =   $jikan - TopCharacters ();  // Top characters page 2  $topCharacters   =   $jikan - TopCharacters ( 2 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/top/character/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Top\\TopCharactersRequest  ?php  $topCharacters   =   $jikan - getTopCharacters ( \n     ( new   \\Jikan\\Request\\Top\\TopCharactersRequest ())  );       Request:  \\Jikan\\Request\\Top\\TopCharacters    Model:  \\Jikan\\Model\\Top\\TopCharacter", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/top/person/", 
            "text": "Top: Characters\n\n\nThis method parses top manga from \nhttps://myanimelist.net/people.php\n\n\nResponse:\n \n\\Jikan\\Model\\Top\\TopPerson[]\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $page\n\n\n?php\n\n\n// Top people\n\n\n$topPeople\n \n=\n \n$jikan\n-\nTopPeople\n();\n\n\n\n// Top people page 2\n\n\n$topPeople\n \n=\n \n$jikan\n-\nTopPeople\n(\n1\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Top\\TopPeopleRequest\n\n\n?php\n\n\n\n$topPeople\n \n=\n \n$jikan\n-\ngetTopPeople\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Top\\TopPeopleRequest\n())\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Top\\TopPeople\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Top\\TopPerson", 
            "title": "Person"
        }, 
        {
            "location": "/usage/top/person/#top-characters", 
            "text": "This method parses top manga from  https://myanimelist.net/people.php  Response:   \\Jikan\\Model\\Top\\TopPerson[]", 
            "title": "Top: Characters"
        }, 
        {
            "location": "/usage/top/person/#usage-legacy", 
            "text": "Arguments:   int $page  ?php  // Top people  $topPeople   =   $jikan - TopPeople ();  // Top people page 2  $topPeople   =   $jikan - TopPeople ( 1 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/top/person/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Top\\TopPeopleRequest  ?php  $topPeople   =   $jikan - getTopPeople ( \n     ( new   \\Jikan\\Request\\Top\\TopPeopleRequest ())  );       Request:  \\Jikan\\Request\\Top\\TopPeople    Model:  \\Jikan\\Model\\Top\\TopPerson", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/genre/anime/", 
            "text": "Genre: Anime\n\n\nThis method parses anime genres from \nhttps://myanimelist.net/profile/anime/genre/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Genre\\AnimeGenre\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n, \nint $page\n\n\n?php\n\n\n\n// Action Anime (MAL ID: 1)\n\n\n$actionAnime\n \n=\n \n$jikan\n-\nAnimeGenre\n(\n1\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Genre\\AnimeGenreRequest\n\n\n?php\n\n\n\n$actionAnime\n \n=\n \n$jikan\n-\ngetAnimeGenre\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Genre\\AnimeGenreRequest\n(\n1\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Genre\\AnimeGenreRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Genre\\AnimeGenre", 
            "title": "Anime"
        }, 
        {
            "location": "/usage/genre/anime/#genre-anime", 
            "text": "This method parses anime genres from  https://myanimelist.net/profile/anime/genre/{id}  Response:   \\Jikan\\Model\\Genre\\AnimeGenre", 
            "title": "Genre: Anime"
        }, 
        {
            "location": "/usage/genre/anime/#usage-legacy", 
            "text": "Arguments:   int $id ,  int $page  ?php  // Action Anime (MAL ID: 1)  $actionAnime   =   $jikan - AnimeGenre ( 1 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/genre/anime/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Genre\\AnimeGenreRequest  ?php  $actionAnime   =   $jikan - getAnimeGenre ( \n     ( new   \\Jikan\\Request\\Genre\\AnimeGenreRequest ( 1 ))  );       Request:  \\Jikan\\Request\\Genre\\AnimeGenreRequest    Model:  \\Jikan\\Model\\Genre\\AnimeGenre", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/genre/manga/", 
            "text": "Genre: Manga\n\n\nThis method parses manga genres from \nhttps://myanimelist.net/profile/manga/genre/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Genre\\MangaGenre\n\n\nUsage: Legacy\n\n\nArguments:\n \nint $id\n, \nint $page\n\n\n?php\n\n\n\n// Action Manga (MAL ID: 1)\n\n\n$actionManga\n \n=\n \n$jikan\n-\nMangaGenre\n(\n1\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Genre\\MangaGenreRequest\n\n\n?php\n\n\n\n$actionManga\n \n=\n \n$jikan\n-\ngetMangaGenre\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Genre\\MangaGenreRequest\n(\n1\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Genre\\MangaGenreRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Genre\\MangaGenre", 
            "title": "Manga"
        }, 
        {
            "location": "/usage/genre/manga/#genre-manga", 
            "text": "This method parses manga genres from  https://myanimelist.net/profile/manga/genre/{id}  Response:   \\Jikan\\Model\\Genre\\MangaGenre", 
            "title": "Genre: Manga"
        }, 
        {
            "location": "/usage/genre/manga/#usage-legacy", 
            "text": "Arguments:   int $id ,  int $page  ?php  // Action Manga (MAL ID: 1)  $actionManga   =   $jikan - MangaGenre ( 1 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/genre/manga/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Genre\\MangaGenreRequest  ?php  $actionManga   =   $jikan - getMangaGenre ( \n     ( new   \\Jikan\\Request\\Genre\\MangaGenreRequest ( 1 ))  );       Request:  \\Jikan\\Request\\Genre\\MangaGenreRequest    Model:  \\Jikan\\Model\\Genre\\MangaGenre", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/user/profile/", 
            "text": "User: Profile\n\n\nThis method parses user profiles from \nhttps://myanimelist.net/profile/{username}\n\n\nResponse:\n \n\\Jikan\\Model\\User\\Profile[]\n\n\nUsage: Legacy\n\n\nArgument:\n \nstring $username\n\n\n?php\n\n\n\n// Profile: Nekomata1037\n\n\n$userProfile\n \n=\n \n$jikan\n-\nUserProfile\n(\nnekomata1037\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\User\\UserProfileRequest\n\n\n?php\n\n\n\n$userProfile\n \n=\n \n$jikan\n-\ngetUserProfile\n(\n\n  \nnew\n \n\\Jikan\\Request\\User\\UserProfileRequest\n(\nnekomata1037\n)\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\User\\UserProfileRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\User\\TopAnime", 
            "title": "Profile"
        }, 
        {
            "location": "/usage/user/profile/#user-profile", 
            "text": "This method parses user profiles from  https://myanimelist.net/profile/{username}  Response:   \\Jikan\\Model\\User\\Profile[]", 
            "title": "User: Profile"
        }, 
        {
            "location": "/usage/user/profile/#usage-legacy", 
            "text": "Argument:   string $username  ?php  // Profile: Nekomata1037  $userProfile   =   $jikan - UserProfile ( nekomata1037 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/user/profile/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\User\\UserProfileRequest  ?php  $userProfile   =   $jikan - getUserProfile ( \n   new   \\Jikan\\Request\\User\\UserProfileRequest ( nekomata1037 )  );       Request:  \\Jikan\\Request\\User\\UserProfileRequest    Model:  \\Jikan\\Model\\User\\TopAnime", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/user/friends/", 
            "text": "User: History\n\n\nThis method parses user friends from \nhttps://myanimelist.net/profile/{username}/friends\n\n\nResponse:\n \n\\Jikan\\Model\\User\\Friend[]\n\n\nUsage: Legacy\n\n\nArgument:\n \nstring $username\n, \nint $page\n\n\n?php\n\n\n\n// Friends: Nekomata1037\n\n\n$userFriends\n \n=\n \n$jikan\n-\nUserFriends\n(\nnekomata1037\n);\n\n\n\n// I don\nt have many friends so this will return empty :\n(\n\n\n$userFriends\n \n=\n \n$jikan\n-\nUserFriends\n(\nnekomata1037\n,\n \n2\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\User\\UserFriendsRequest\n\n\n?php\n\n\n\n$userFriends\n \n=\n \n$jikan\n-\ngetUserFriends\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\User\\UserFriendsRequest\n(\nnekomata1037\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\User\\UserFriendsRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\User\\Friend", 
            "title": "Friends"
        }, 
        {
            "location": "/usage/user/friends/#user-history", 
            "text": "This method parses user friends from  https://myanimelist.net/profile/{username}/friends  Response:   \\Jikan\\Model\\User\\Friend[]", 
            "title": "User: History"
        }, 
        {
            "location": "/usage/user/friends/#usage-legacy", 
            "text": "Argument:   string $username ,  int $page  ?php  // Friends: Nekomata1037  $userFriends   =   $jikan - UserFriends ( nekomata1037 );  // I don t have many friends so this will return empty : (  $userFriends   =   $jikan - UserFriends ( nekomata1037 ,   2 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/user/friends/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\User\\UserFriendsRequest  ?php  $userFriends   =   $jikan - getUserFriends ( \n     ( new   \\Jikan\\Request\\User\\UserFriendsRequest ( nekomata1037 ))  );       Request:  \\Jikan\\Request\\User\\UserFriendsRequest    Model:  \\Jikan\\Model\\User\\Friend", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/user/history/", 
            "text": "User: History\n\n\nThis method parses user history from \nhttps://myanimelist.net/history/{username}\n\n\nResponse:\n \n\\Jikan\\Model\\User\\History[]\n\n\nUsage: Legacy\n\n\nArgument:\n \nstring $username\n, \nstring $type = null\n\n\n?php\n\n\nuse\n \n\\Jikan\\Helper\\Constants\n;\n\n\n\n// All history (anime and manga)\n\n\n$userHistory\n \n=\n \n$jikan\n-\nUserHistory\n(\nnekomata1037\n);\n\n\n\n// Anime history\n\n\n$userHistory\n \n=\n \n$jikan\n-\nUserHistory\n(\nnekomata1037\n,\n \nConstants\n::\nANIME\n);\n\n\n\n// Manga history\n\n\n$userHistory\n \n=\n \n$jikan\n-\nUserHistory\n(\nnekomata1037\n,\n \nConstants\n::\nMANGA\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\User\\UserHistoryRequest\n\n\n?php\n\n\n\n$userHistory\n \n=\n \n$jikan\n-\ngetUserHistory\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\User\\UserHistoryRequest\n(\nnekomata1037\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\User\\UserHistoryRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\User\\History", 
            "title": "History"
        }, 
        {
            "location": "/usage/user/history/#user-history", 
            "text": "This method parses user history from  https://myanimelist.net/history/{username}  Response:   \\Jikan\\Model\\User\\History[]", 
            "title": "User: History"
        }, 
        {
            "location": "/usage/user/history/#usage-legacy", 
            "text": "Argument:   string $username ,  string $type = null  ?php  use   \\Jikan\\Helper\\Constants ;  // All history (anime and manga)  $userHistory   =   $jikan - UserHistory ( nekomata1037 );  // Anime history  $userHistory   =   $jikan - UserHistory ( nekomata1037 ,   Constants :: ANIME );  // Manga history  $userHistory   =   $jikan - UserHistory ( nekomata1037 ,   Constants :: MANGA );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/user/history/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\User\\UserHistoryRequest  ?php  $userHistory   =   $jikan - getUserHistory ( \n     ( new   \\Jikan\\Request\\User\\UserHistoryRequest ( nekomata1037 ))  );       Request:  \\Jikan\\Request\\User\\UserHistoryRequest    Model:  \\Jikan\\Model\\User\\History", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/producers/", 
            "text": "Producer\n\n\nThis method parses anime by producers from \nhttps://myanimelist.net/anime/producer/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Producer\\Producer\n\n\nUsage: Legacy\n\n\nArgument:\n \nint $id\n, \nint $page\n\n\n?php\n\n\n\n// Producer Production I.G\n\n\n$animeByProducer\n \n=\n \n$jikan\n-\nProducer\n(\n10\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Producer\\ProducerRequest\n\n\n?php\n\n\n\n$animeByProducer\n \n=\n \n$jikan\n-\ngetProducer\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Producer\\ProducerRequest\n(\n10\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Producer\\ProducerRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Producer\\Producer", 
            "title": "Producer"
        }, 
        {
            "location": "/usage/producers/#producer", 
            "text": "This method parses anime by producers from  https://myanimelist.net/anime/producer/{id}  Response:   \\Jikan\\Model\\Producer\\Producer", 
            "title": "Producer"
        }, 
        {
            "location": "/usage/producers/#usage-legacy", 
            "text": "Argument:   int $id ,  int $page  ?php  // Producer Production I.G  $animeByProducer   =   $jikan - Producer ( 10 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/producers/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Producer\\ProducerRequest  ?php  $animeByProducer   =   $jikan - getProducer ( \n     ( new   \\Jikan\\Request\\Producer\\ProducerRequest ( 10 ))  );       Request:  \\Jikan\\Request\\Producer\\ProducerRequest    Model:  \\Jikan\\Model\\Producer\\Producer", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/usage/magazines/", 
            "text": "Magazine\n\n\nThis method parses manga by magazines from \nhttps://myanimelist.net/manga/magazine/{id}\n\n\nResponse:\n \n\\Jikan\\Model\\Magazine\\Magazine\n\n\nUsage: Legacy\n\n\nArgument:\n \nint $id\n, \nint $page\n\n\n?php\n\n\n\n// Magazine Shounen Jump Weekly\n\n\n$mangaByMagazine\n \n=\n \n$jikan\n-\nMagazine\n(\n83\n);\n\n\n\n\n\n\nUsage: Standard\n\n\nArgument:\n \n\\Jikan\\Request\\Magazine\\MagazineRequest\n\n\n?php\n\n\n\n$mangaByMagazine\n \n=\n \n$jikan\n-\ngetMagazine\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Magazine\\MagazineRequest\n(\n83\n))\n\n\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest: \n\\Jikan\\Request\\Magazine\\MagazineRequest\n\n\n\n\n\n\nModel: \n\\Jikan\\Model\\Magazine\\Magazine", 
            "title": "Magazine"
        }, 
        {
            "location": "/usage/magazines/#magazine", 
            "text": "This method parses manga by magazines from  https://myanimelist.net/manga/magazine/{id}  Response:   \\Jikan\\Model\\Magazine\\Magazine", 
            "title": "Magazine"
        }, 
        {
            "location": "/usage/magazines/#usage-legacy", 
            "text": "Argument:   int $id ,  int $page  ?php  // Magazine Shounen Jump Weekly  $mangaByMagazine   =   $jikan - Magazine ( 83 );", 
            "title": "Usage: Legacy"
        }, 
        {
            "location": "/usage/magazines/#usage-standard", 
            "text": "Argument:   \\Jikan\\Request\\Magazine\\MagazineRequest  ?php  $mangaByMagazine   =   $jikan - getMagazine ( \n     ( new   \\Jikan\\Request\\Magazine\\MagazineRequest ( 83 ))  );       Request:  \\Jikan\\Request\\Magazine\\MagazineRequest    Model:  \\Jikan\\Model\\Magazine\\Magazine", 
            "title": "Usage: Standard"
        }, 
        {
            "location": "/objects/request/anime/anime/", 
            "text": "AnimeRequest\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Anime Request"
        }, 
        {
            "location": "/objects/request/anime/anime/#animerequest", 
            "text": "Argument  Type  Description      id  int  The Anime ID on MyAnimeList", 
            "title": "AnimeRequest"
        }, 
        {
            "location": "/objects/request/anime/anime/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/anime/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/characters-and-staff/", 
            "text": "AnimeCharactersAndStaffRequest\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Characters And Staff Request"
        }, 
        {
            "location": "/objects/request/anime/characters-and-staff/#animecharactersandstaffrequest", 
            "text": "Argument  Type  Description      id  int  The Anime ID on MyAnimeList", 
            "title": "AnimeCharactersAndStaffRequest"
        }, 
        {
            "location": "/objects/request/anime/characters-and-staff/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/characters-and-staff/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/episodes/", 
            "text": "AnimeEpisodesRequest\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\npage\n\n\nint\n\n\nEpisode page to parse\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Episodes Request"
        }, 
        {
            "location": "/objects/request/anime/episodes/#animeepisodesrequest", 
            "text": "Argument  Type  Description      id  int  The Anime ID on MyAnimeList    page  int  Episode page to parse", 
            "title": "AnimeEpisodesRequest"
        }, 
        {
            "location": "/objects/request/anime/episodes/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/episodes/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/videos/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Videos Request"
        }, 
        {
            "location": "/objects/request/anime/videos/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/videos/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/pictures/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Pictures Request"
        }, 
        {
            "location": "/objects/request/anime/pictures/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/pictures/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/forum/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Forum Request"
        }, 
        {
            "location": "/objects/request/anime/forum/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/forum/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/news/", 
            "text": "AnimeNewsRequest\n\n\n\n\n\n\n\n\nArgument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "News Request"
        }, 
        {
            "location": "/objects/request/anime/news/#animenewsrequest", 
            "text": "Argument  Type  Description      id  int  The Anime ID on MyAnimeList", 
            "title": "AnimeNewsRequest"
        }, 
        {
            "location": "/objects/request/anime/news/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/news/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/stats/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Stats Request"
        }, 
        {
            "location": "/objects/request/anime/stats/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/stats/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/anime/more-info/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "More Info Request"
        }, 
        {
            "location": "/objects/request/anime/more-info/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/anime/more-info/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/manga/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Manga Request"
        }, 
        {
            "location": "/objects/request/manga/manga/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/manga/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/characters/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Characters Request"
        }, 
        {
            "location": "/objects/request/manga/characters/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/characters/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/pictures/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Pictures Request"
        }, 
        {
            "location": "/objects/request/manga/pictures/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/pictures/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/forum/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Forum Request"
        }, 
        {
            "location": "/objects/request/manga/forum/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/forum/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/news/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "News Request"
        }, 
        {
            "location": "/objects/request/manga/news/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/news/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/stats/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "Stats Request"
        }, 
        {
            "location": "/objects/request/manga/stats/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/stats/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/manga/more-info/", 
            "text": "Argument\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nint\n\n\nThe Anime ID on MyAnimeList\n\n\n\n\n\n\n\n\nMethods\n\n\ngetPath() : string\n\n\nDescription:\n Generated request path", 
            "title": "More Info Request"
        }, 
        {
            "location": "/objects/request/manga/more-info/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/request/manga/more-info/#getpath-string", 
            "text": "Description:  Generated request path", 
            "title": "getPath() : string"
        }, 
        {
            "location": "/objects/request/character/character/", 
            "text": "", 
            "title": "Character Request"
        }, 
        {
            "location": "/objects/request/character/pictures/", 
            "text": "", 
            "title": "Pictures Request"
        }, 
        {
            "location": "/objects/request/person/person/", 
            "text": "", 
            "title": "Person Request"
        }, 
        {
            "location": "/objects/request/person/pictures/", 
            "text": "", 
            "title": "Pictures Request"
        }, 
        {
            "location": "/objects/model/anime/anime/", 
            "text": "Methods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetPreviewVideoUrl() : string\n\n\nDescription:\n Preview/Promo video embed URL\n\n\ngetTitle() : string\n\n\nDescription:\n Official title\n\n\ngetTitleEnglish() : ?string\n\n\nDescription:\n English title\n\n\ngetTitleJapanese() : ?string\n\n\nDescription:\n Kanji title\n\n\ngetTitleSynonyms() : string[]\n\n\nDescription:\n Other titles\n\n\ngetType() : string\n\n\nDescription:\n Item type, e.g \nTV\n, \nMovie\n, \nOVA\n, etc\n\n\ngetSource() : string\n\n\nDescription:\n Adaption source, e.g \nManga\n, \nNovel\n, etc\n\n\ngetEpisodes() : ?int\n\n\nDescription:\n Episode count, \nnull\n if unknown\n\n\ngetImageUrl() : string\n\n\nDescription:\n Other titles\n\n\ngetStatus() : string\n\n\nDescription:\n Item status, e.g \nCurrently Airing\n, \nFinished Airing\n, etc\n\n\nisAiring() : bool\n\n\ngetAired() : DateRange\n\n\nDescription:\n Returns \n2\n\\Jikan\\Model\\DateRange\n\n\ngetDuration() : string\n\n\nDescription:\n Episode duration\n\n\ngetRating() : string\n\n\nDescription:\n Item rating, e.g \nPG\n, \nR17\n, etc\n\n\ngetScore() : float\n\n\nDescription:\n Item score\n\n\ngetScoredBy() : int\n\n\nDescription:\n Number of users item scored by\n\n\ngetRank() : int\n\n\nDescription:\n Item rank on MyAnimeList\n\n\ngetPopularity() : int\n\n\nDescription:\n Item popularity on MyAnimeList\n\n\ngetMembers() : int\n\n\nDescription:\n Item members on MyAnimeList\n\n\ngetFavorites() : int\n\n\nDescription:\n Item favorites on MyAnimeList\n\n\ngetSynopsis() : string\n\n\ngetBackground() : string\n\n\nDescription:\n Background information\n\n\ngetPremiered() : string\n\n\nDescription:\n Season \n year\n\n\ngetBroadcast() : string\n\n\nDescription:\n Day \n Time item broadcasted on\n\n\ngetRelated() : array\n\n\nDescription:\n Related items as \n1\n\\Jikan\\Model\\MalUrl\n in associative arrays with the keys as their respective relation\n\n\ngetProducers() : MalUrl[]\n\n\nDescription:\n Producers as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetLicensors() : MalUrl[]\n\n\nDescription:\n Licensors as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetStudios() : MalUrl[]\n\n\nDescription:\n Studios as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetGenres() : MalUrl[]\n\n\nDescription:\n Genres as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetProducers() : array\n\n\nDescription:\n Producers as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetOpeningTheme() : string[]\n\n\ngetEndingTheme() : string[]\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\MalUrl\n\n\n\n\n\n\n\\Jikan\\Model\\DateRange", 
            "title": "Anime Model"
        }, 
        {
            "location": "/objects/model/anime/anime/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/anime/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/anime/anime/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getpreviewvideourl-string", 
            "text": "Description:  Preview/Promo video embed URL", 
            "title": "getPreviewVideoUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#gettitle-string", 
            "text": "Description:  Official title", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#gettitleenglish-string", 
            "text": "Description:  English title", 
            "title": "getTitleEnglish() : ?string"
        }, 
        {
            "location": "/objects/model/anime/anime/#gettitlejapanese-string", 
            "text": "Description:  Kanji title", 
            "title": "getTitleJapanese() : ?string"
        }, 
        {
            "location": "/objects/model/anime/anime/#gettitlesynonyms-string", 
            "text": "Description:  Other titles", 
            "title": "getTitleSynonyms() : string[]"
        }, 
        {
            "location": "/objects/model/anime/anime/#gettype-string", 
            "text": "Description:  Item type, e.g  TV ,  Movie ,  OVA , etc", 
            "title": "getType() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getsource-string", 
            "text": "Description:  Adaption source, e.g  Manga ,  Novel , etc", 
            "title": "getSource() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getepisodes-int", 
            "text": "Description:  Episode count,  null  if unknown", 
            "title": "getEpisodes() : ?int"
        }, 
        {
            "location": "/objects/model/anime/anime/#getimageurl-string_1", 
            "text": "Description:  Other titles", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getstatus-string", 
            "text": "Description:  Item status, e.g  Currently Airing ,  Finished Airing , etc", 
            "title": "getStatus() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#isairing-bool", 
            "text": "", 
            "title": "isAiring() : bool"
        }, 
        {
            "location": "/objects/model/anime/anime/#getaired-daterange", 
            "text": "Description:  Returns  2 \\Jikan\\Model\\DateRange", 
            "title": "getAired() : DateRange"
        }, 
        {
            "location": "/objects/model/anime/anime/#getduration-string", 
            "text": "Description:  Episode duration", 
            "title": "getDuration() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getrating-string", 
            "text": "Description:  Item rating, e.g  PG ,  R17 , etc", 
            "title": "getRating() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getscore-float", 
            "text": "Description:  Item score", 
            "title": "getScore() : float"
        }, 
        {
            "location": "/objects/model/anime/anime/#getscoredby-int", 
            "text": "Description:  Number of users item scored by", 
            "title": "getScoredBy() : int"
        }, 
        {
            "location": "/objects/model/anime/anime/#getrank-int", 
            "text": "Description:  Item rank on MyAnimeList", 
            "title": "getRank() : int"
        }, 
        {
            "location": "/objects/model/anime/anime/#getpopularity-int", 
            "text": "Description:  Item popularity on MyAnimeList", 
            "title": "getPopularity() : int"
        }, 
        {
            "location": "/objects/model/anime/anime/#getmembers-int", 
            "text": "Description:  Item members on MyAnimeList", 
            "title": "getMembers() : int"
        }, 
        {
            "location": "/objects/model/anime/anime/#getfavorites-int", 
            "text": "Description:  Item favorites on MyAnimeList", 
            "title": "getFavorites() : int"
        }, 
        {
            "location": "/objects/model/anime/anime/#getsynopsis-string", 
            "text": "", 
            "title": "getSynopsis() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getbackground-string", 
            "text": "Description:  Background information", 
            "title": "getBackground() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getpremiered-string", 
            "text": "Description:  Season   year", 
            "title": "getPremiered() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getbroadcast-string", 
            "text": "Description:  Day   Time item broadcasted on", 
            "title": "getBroadcast() : string"
        }, 
        {
            "location": "/objects/model/anime/anime/#getrelated-array", 
            "text": "Description:  Related items as  1 \\Jikan\\Model\\MalUrl  in associative arrays with the keys as their respective relation", 
            "title": "getRelated() : array"
        }, 
        {
            "location": "/objects/model/anime/anime/#getproducers-malurl", 
            "text": "Description:  Producers as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getProducers() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/anime/anime/#getlicensors-malurl", 
            "text": "Description:  Licensors as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getLicensors() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/anime/anime/#getstudios-malurl", 
            "text": "Description:  Studios as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getStudios() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/anime/anime/#getgenres-malurl", 
            "text": "Description:  Genres as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getGenres() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/anime/anime/#getproducers-array", 
            "text": "Description:  Producers as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getProducers() : array"
        }, 
        {
            "location": "/objects/model/anime/anime/#getopeningtheme-string", 
            "text": "", 
            "title": "getOpeningTheme() : string[]"
        }, 
        {
            "location": "/objects/model/anime/anime/#getendingtheme-string", 
            "text": "\\Jikan\\Model\\MalUrl    \\Jikan\\Model\\DateRange", 
            "title": "getEndingTheme() : string[]"
        }, 
        {
            "location": "/objects/model/anime/characters-and-staff/", 
            "text": "Methods\n\n\ngetCharacters() : CharacterListItem[]\n\n\nDescription:\n Returns an array of \n1\n\\Jikan\\Model\\Character\\CharacterListItem\n\n\ngetStaff() : StaffListItem[]\n\n\nDescription:\n Returns an array of \n1\n\\Jikan\\Model\\Anime\\StaffListItem\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Character\\CharacterListItem\n\n\n\n\n\n\n\\Jikan\\Model\\Anime\\StaffListItem", 
            "title": "Characters And Staff Model"
        }, 
        {
            "location": "/objects/model/anime/characters-and-staff/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/characters-and-staff/#getcharacters-characterlistitem", 
            "text": "Description:  Returns an array of  1 \\Jikan\\Model\\Character\\CharacterListItem", 
            "title": "getCharacters() : CharacterListItem[]"
        }, 
        {
            "location": "/objects/model/anime/characters-and-staff/#getstaff-stafflistitem", 
            "text": "Description:  Returns an array of  1 \\Jikan\\Model\\Anime\\StaffListItem      \\Jikan\\Model\\Character\\CharacterListItem    \\Jikan\\Model\\Anime\\StaffListItem", 
            "title": "getStaff() : StaffListItem[]"
        }, 
        {
            "location": "/objects/model/anime/episodes/", 
            "text": "Methods\n\n\ngetEpisodes() : EpisodeListItem[]\n\n\nDescription:\n Returns an array of \n1\n\\Jikan\\Model\\Anime\\EpisodeListItem\n\n\ngetEpisodesLastPage() : int\n\n\nDescription:\n Number of pages for the episode list. There's 100 episodes per page. Anime with more than 100 episodes will be paginated.\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Anime\\EpisodesListItem", 
            "title": "Episodes Model"
        }, 
        {
            "location": "/objects/model/anime/episodes/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/episodes/#getepisodes-episodelistitem", 
            "text": "Description:  Returns an array of  1 \\Jikan\\Model\\Anime\\EpisodeListItem", 
            "title": "getEpisodes() : EpisodeListItem[]"
        }, 
        {
            "location": "/objects/model/anime/episodes/#getepisodeslastpage-int", 
            "text": "Description:  Number of pages for the episode list. There's 100 episodes per page. Anime with more than 100 episodes will be paginated.      \\Jikan\\Model\\Anime\\EpisodesListItem", 
            "title": "getEpisodesLastPage() : int"
        }, 
        {
            "location": "/objects/model/anime/videos/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch videos of Cowbow Bepop\n\n\n// Request: https://myanimelist.net/anime/1/_/video\n\n\n$videos\n \n=\n \n$jikan\n-\nAnimeVideos\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeVideosRequest\n(\n1\n))\n\n\n);\n\n\n\n// Episodes\n\n\nvar_dump\n(\n\n    \n$videos\n-\ngetEpisodes\n()\n\n\n);\n\n\n\n// Promo Videos\n\n\nvar_dump\n(\n\n    \n$videos\n-\ngetPromos\n()\n\n\n);\n\n\n\n\n\n\nMethods\n\n\ngetPromos() : PromoListItem[]\n\n\nDescription:\n Returns an array of \n1\n\\Jikan\\Model\\Anime\\PromoListItem\n\n\ngetEpisodes() : StreamEpisodeListItem[]\n\n\nDescription:\n Returns an array of \n2\n\\Jikan\\Model\\Anime\\StreamEpisodeListItem\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Anime\\PromoListItem\n\n\n\n\n\n\n\\Jikan\\Model\\Anime\\StreamEpisodeListItem", 
            "title": "Videos Model"
        }, 
        {
            "location": "/objects/model/anime/videos/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch videos of Cowbow Bepop  // Request: https://myanimelist.net/anime/1/_/video  $videos   =   $jikan - AnimeVideos ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeVideosRequest ( 1 ))  );  // Episodes  var_dump ( \n     $videos - getEpisodes ()  );  // Promo Videos  var_dump ( \n     $videos - getPromos ()  );", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/anime/videos/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/videos/#getpromos-promolistitem", 
            "text": "Description:  Returns an array of  1 \\Jikan\\Model\\Anime\\PromoListItem", 
            "title": "getPromos() : PromoListItem[]"
        }, 
        {
            "location": "/objects/model/anime/videos/#getepisodes-streamepisodelistitem", 
            "text": "Description:  Returns an array of  2 \\Jikan\\Model\\Anime\\StreamEpisodeListItem      \\Jikan\\Model\\Anime\\PromoListItem    \\Jikan\\Model\\Anime\\StreamEpisodeListItem", 
            "title": "getEpisodes() : StreamEpisodeListItem[]"
        }, 
        {
            "location": "/objects/model/anime/stats/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch One Piece\ns anime stats\n\n\n// Request: https://myanimelist.net/anime/21/_/stats\n\n\n$anime\n \n=\n \n$jikan\n-\nAnimeStats\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeStatsRequest\n(\n21\n))\n\n\n);\n\n\n\necho\n \nWatching: \n \n.\n \n$anime\n-\ngetWatching\n();\n\n\necho\n \nRated 10/10: \n \n.\n \n$anime\n-\ngetScores\n()[\n10\n]\n-\ngetVotes\n();\n\n\necho\n \nRated 1/10: \n \n.\n \n$anime\n-\ngetScores\n()[\n1\n]\n-\ngetVotes\n();\n\n\n\n\n\n\nMethods\n\n\ngetWatching() : int\n\n\nDescription:\n Count of MyAnimeList users currently watching\n\n\ngetCompleted() : int\n\n\nDescription:\n Count of MyAnimeList users completed\n\n\ngetOnHold() : int\n\n\nDescription:\n Count of MyAnimeList users on hold\n\n\ngetDropped() : int\n\n\nDescription:\n Count of MyAnimeList users who've dropped\n\n\ngetPlanToWatch() : int\n\n\nDescription:\n Count of MyAnimeList users planning to watch\n\n\ngetTotal() : int\n\n\nDescription:\n Count of total MyAnimeList users with statuses set for this item\n\n\ngetScores() : array\n\n\nDescription:\n Scores by MyAnimeList users with array indexes 1-10", 
            "title": "Stats Model"
        }, 
        {
            "location": "/objects/model/anime/stats/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch One Piece s anime stats  // Request: https://myanimelist.net/anime/21/_/stats  $anime   =   $jikan - AnimeStats ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeStatsRequest ( 21 ))  );  echo   Watching:    .   $anime - getWatching ();  echo   Rated 10/10:    .   $anime - getScores ()[ 10 ] - getVotes ();  echo   Rated 1/10:    .   $anime - getScores ()[ 1 ] - getVotes ();", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/anime/stats/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/stats/#getwatching-int", 
            "text": "Description:  Count of MyAnimeList users currently watching", 
            "title": "getWatching() : int"
        }, 
        {
            "location": "/objects/model/anime/stats/#getcompleted-int", 
            "text": "Description:  Count of MyAnimeList users completed", 
            "title": "getCompleted() : int"
        }, 
        {
            "location": "/objects/model/anime/stats/#getonhold-int", 
            "text": "Description:  Count of MyAnimeList users on hold", 
            "title": "getOnHold() : int"
        }, 
        {
            "location": "/objects/model/anime/stats/#getdropped-int", 
            "text": "Description:  Count of MyAnimeList users who've dropped", 
            "title": "getDropped() : int"
        }, 
        {
            "location": "/objects/model/anime/stats/#getplantowatch-int", 
            "text": "Description:  Count of MyAnimeList users planning to watch", 
            "title": "getPlanToWatch() : int"
        }, 
        {
            "location": "/objects/model/anime/stats/#gettotal-int", 
            "text": "Description:  Count of total MyAnimeList users with statuses set for this item", 
            "title": "getTotal() : int"
        }, 
        {
            "location": "/objects/model/anime/stats/#getscores-array", 
            "text": "Description:  Scores by MyAnimeList users with array indexes 1-10", 
            "title": "getScores() : array"
        }, 
        {
            "location": "/objects/model/anime/more-info/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch pictures related to One Piece\n\n\n// Request: https://myanimelist.net/anime/21/_/moreinfo\n\n\n$anime\n \n=\n \n$jikan\n-\nAnimeMoreInfo\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeMoreInfoRequest\n(\n21\n))\n\n\n);\n\n\n\necho\n \n$anime\n-\ngetMoreInfo\n();\n\n\n\n\n\n\nMethods\n\n\ngetMoreInfo() : ?string\n\n\nDescription:\n More information related to Item", 
            "title": "MoreInfo Model"
        }, 
        {
            "location": "/objects/model/anime/more-info/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch pictures related to One Piece  // Request: https://myanimelist.net/anime/21/_/moreinfo  $anime   =   $jikan - AnimeMoreInfo ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeMoreInfoRequest ( 21 ))  );  echo   $anime - getMoreInfo ();", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/anime/more-info/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/more-info/#getmoreinfo-string", 
            "text": "Description:  More information related to Item", 
            "title": "getMoreInfo() : ?string"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/", 
            "text": "Methods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetName() : string\n\n\nDescription:\n Person's name\n\n\ngetPositions() : string[]\n\n\nDescription:\n Person's positions", 
            "title": "StaffListItem"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/#getname-string", 
            "text": "Description:  Person's name", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/anime/staff-list-item/#getpositions-string", 
            "text": "Description:  Person's positions", 
            "title": "getPositions() : string[]"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/", 
            "text": "Methods\n\n\ngetEpisodeId() : int\n\n\nDescription:\n MyAnimeList Episode ID\n\n\ngetVideoUrl() : string\n\n\nDescription:\n MyAnimeList episode URL\n\n\ngetForumUrl() : string\n\n\nDescription:\n MyAnimeList forum topic URL\n\n\ngetTitle() : string\n\n\nDescription:\n Episode title\n\n\ngetTitleJapanese() : string\n\n\nDescription:\n Episode title in Japanese\n\n\ngetTitleRomanji() : string\n\n\nDescription:\n Episode title in Romanji\n\n\ngetAired() : ?DateRange\n\n\nDescription:\n Returns \n1\n\\Jikan\\Model\\Common\\DateRange\n\n\nisFiller() : bool\n\n\nisRecap() : bool\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Common\\DateRange", 
            "title": "EpisodeListItem"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#getepisodeid-int", 
            "text": "Description:  MyAnimeList Episode ID", 
            "title": "getEpisodeId() : int"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#getvideourl-string", 
            "text": "Description:  MyAnimeList episode URL", 
            "title": "getVideoUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#getforumurl-string", 
            "text": "Description:  MyAnimeList forum topic URL", 
            "title": "getForumUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#gettitle-string", 
            "text": "Description:  Episode title", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#gettitlejapanese-string", 
            "text": "Description:  Episode title in Japanese", 
            "title": "getTitleJapanese() : string"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#gettitleromanji-string", 
            "text": "Description:  Episode title in Romanji", 
            "title": "getTitleRomanji() : string"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#getaired-daterange", 
            "text": "Description:  Returns  1 \\Jikan\\Model\\Common\\DateRange", 
            "title": "getAired() : ?DateRange"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#isfiller-bool", 
            "text": "", 
            "title": "isFiller() : bool"
        }, 
        {
            "location": "/objects/model/anime/episode-list-item/#isrecap-bool", 
            "text": "\\Jikan\\Model\\Common\\DateRange", 
            "title": "isRecap() : bool"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch videos of Cowbow Bepop\n\n\n// Request: https://myanimelist.net/anime/1/_/video\n\n\n$videos\n \n=\n \n$jikan\n-\nAnimeVideos\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeVideosRequest\n(\n1\n))\n\n\n);\n\n\n\n// Streamable Episodes\n\n\n$episodes\n \n=\n \n$videos\n-\ngetEpisodes\n();\n\n\n\nforeach\n(\n$episodes\n \nas\n \n$episode\n)\n \n{\n\n    \necho\n \n$episode\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n\n}\n\n\n\n\n\n\nMethods\n\n\ngetImageUrl() : string\n\n\nDescription:\n Episode thumbnail image URL\n\n\ngetUrl() : string\n\n\nDescription:\n Episode MyAnimeList URL\n\n\ngetTitle() : string\n\n\nDescription:\n Episode title\n\n\ngetEpisode() : string\n\n\nDescription:\n Episode title/number", 
            "title": "StreamEpisodeListItem"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch videos of Cowbow Bepop  // Request: https://myanimelist.net/anime/1/_/video  $videos   =   $jikan - AnimeVideos ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeVideosRequest ( 1 ))  );  // Streamable Episodes  $episodes   =   $videos - getEpisodes ();  foreach ( $episodes   as   $episode )   { \n     echo   $episode - getTitle ()   .   \\n ;  }", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/#getimageurl-string", 
            "text": "Description:  Episode thumbnail image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/#geturl-string", 
            "text": "Description:  Episode MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/#gettitle-string", 
            "text": "Description:  Episode title", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/anime/stream-episode-list-item/#getepisode-string", 
            "text": "Description:  Episode title/number", 
            "title": "getEpisode() : string"
        }, 
        {
            "location": "/objects/model/anime/promo-list-item/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch videos of Cowbow Bepop\n\n\n// Request: https://myanimelist.net/anime/1/_/video\n\n\n$videos\n \n=\n \n$jikan\n-\nAnimeVideos\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeVideosRequest\n(\n1\n))\n\n\n);\n\n\n\n// Promo Video Titles\n\n\n$promos\n \n=\n \n$videos\n-\ngetPromos\n();\n\n\n\nforeach\n(\n$promos\n \nas\n \n$promo\n)\n \n{\n\n    \necho\n \n$promo\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n\n}\n\n\n\n\n\n\nMethods\n\n\ngetTitle() : string\n\n\nDescription:\n Promo video title\n\n\ngetImageUrl() : string\n\n\nDescription:\n Promo thumbnail image URL\n\n\ngetVideoUrl() : string\n\n\nDescription:\n Promo video URL", 
            "title": "PromoListItem"
        }, 
        {
            "location": "/objects/model/anime/promo-list-item/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch videos of Cowbow Bepop  // Request: https://myanimelist.net/anime/1/_/video  $videos   =   $jikan - AnimeVideos ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeVideosRequest ( 1 ))  );  // Promo Video Titles  $promos   =   $videos - getPromos ();  foreach ( $promos   as   $promo )   { \n     echo   $promo - getTitle ()   .   \\n ;  }", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/anime/promo-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/anime/promo-list-item/#gettitle-string", 
            "text": "Description:  Promo video title", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/anime/promo-list-item/#getimageurl-string", 
            "text": "Description:  Promo thumbnail image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/anime/promo-list-item/#getvideourl-string", 
            "text": "Description:  Promo video URL", 
            "title": "getVideoUrl() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch Naruto\ns manga data\n\n\n// Request: https://myanimelist.net/manga/11\n\n\n$manga\n \n=\n \n$jikan\n-\nManga\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaRequest\n(\n11\n))\n\n\n);\n\n\n\n\n\n\nMethods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetTitle() : string\n\n\nDescription:\n Official title\n\n\ngetTitleEnglish() : ?string\n\n\nDescription:\n English title\n\n\ngetTitleJapanese() : ?string\n\n\nDescription:\n Japanese title\n\n\ngetTitleSynonyms() : string[]\n\n\nDescription:\n Other titles\n\n\ngetType() : string\n\n\nDescription:\n Item type, e.g \nManga\n, \nManhwa\n, \nNovel\n, etc\n\n\ngetChapters() : ?int\n\n\nDescription:\n Chapter count, \nnull\n if unknown\n\n\ngetVolumes() : ?int\n\n\nDescription:\n Volume count, \nnull\n if unknown\n\n\ngetStatus() : string\n\n\nDescription:\n Item status, e.g \nCurrently Publishing\n, \nFinished\n, etc\n\n\nisPublishing() : bool\n\n\ngetPublished() : DateRange\n\n\nDescription:\n Returns \n2\n\\Jikan\\Model\\DateRange\n\n\ngetRating() : string\n\n\nDescription:\n Item rating, e.g \nPG\n, \nR17\n, etc\n\n\ngetScore() : float\n\n\nDescription:\n Item score\n\n\ngetScoredBy() : int\n\n\nDescription:\n Number of users item scored by\n\n\ngetRank() : int\n\n\nDescription:\n Item rank on MyAnimeList\n\n\ngetPopularity() : int\n\n\nDescription:\n Item popularity on MyAnimeList\n\n\ngetMembers() : int\n\n\nDescription:\n Item members on MyAnimeList\n\n\ngetFavorites() : int\n\n\nDescription:\n Item favorites on MyAnimeList\n\n\ngetSynopsis() : string\n\n\ngetBackground() : string\n\n\nDescription:\n Background information\n\n\ngetBroadcast() : string\n\n\nDescription:\n Day \n Time item broadcasted on\n\n\ngetRelated() : array\n\n\nDescription:\n Related items as \n1\n\\Jikan\\Model\\MalUrl\n in associative arrays with the keys as their respective relation\n\n\ngetAuthors() : MalUrl[]\n\n\nDescription:\n Authors as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetSerializations() : MalUrl[]\n\n\nDescription:\n Serializations as \n1\n\\Jikan\\Model\\MalUrl\n\n\ngetGenres() : MalUrl[]\n\n\nDescription:\n Genres as \n1\n\\Jikan\\Model\\MalUrl\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\MalUrl\n\n\n\n\n\n\n\\Jikan\\Model\\DateRange", 
            "title": "Manga Model"
        }, 
        {
            "location": "/objects/model/manga/manga/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch Naruto s manga data  // Request: https://myanimelist.net/manga/11  $manga   =   $jikan - Manga ( \n     ( new   \\Jikan\\Request\\Manga\\MangaRequest ( 11 ))  );", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/manga/manga/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/manga/manga/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/manga/manga/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#gettitle-string", 
            "text": "Description:  Official title", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#gettitleenglish-string", 
            "text": "Description:  English title", 
            "title": "getTitleEnglish() : ?string"
        }, 
        {
            "location": "/objects/model/manga/manga/#gettitlejapanese-string", 
            "text": "Description:  Japanese title", 
            "title": "getTitleJapanese() : ?string"
        }, 
        {
            "location": "/objects/model/manga/manga/#gettitlesynonyms-string", 
            "text": "Description:  Other titles", 
            "title": "getTitleSynonyms() : string[]"
        }, 
        {
            "location": "/objects/model/manga/manga/#gettype-string", 
            "text": "Description:  Item type, e.g  Manga ,  Manhwa ,  Novel , etc", 
            "title": "getType() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#getchapters-int", 
            "text": "Description:  Chapter count,  null  if unknown", 
            "title": "getChapters() : ?int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getvolumes-int", 
            "text": "Description:  Volume count,  null  if unknown", 
            "title": "getVolumes() : ?int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getstatus-string", 
            "text": "Description:  Item status, e.g  Currently Publishing ,  Finished , etc", 
            "title": "getStatus() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#ispublishing-bool", 
            "text": "", 
            "title": "isPublishing() : bool"
        }, 
        {
            "location": "/objects/model/manga/manga/#getpublished-daterange", 
            "text": "Description:  Returns  2 \\Jikan\\Model\\DateRange", 
            "title": "getPublished() : DateRange"
        }, 
        {
            "location": "/objects/model/manga/manga/#getrating-string", 
            "text": "Description:  Item rating, e.g  PG ,  R17 , etc", 
            "title": "getRating() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#getscore-float", 
            "text": "Description:  Item score", 
            "title": "getScore() : float"
        }, 
        {
            "location": "/objects/model/manga/manga/#getscoredby-int", 
            "text": "Description:  Number of users item scored by", 
            "title": "getScoredBy() : int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getrank-int", 
            "text": "Description:  Item rank on MyAnimeList", 
            "title": "getRank() : int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getpopularity-int", 
            "text": "Description:  Item popularity on MyAnimeList", 
            "title": "getPopularity() : int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getmembers-int", 
            "text": "Description:  Item members on MyAnimeList", 
            "title": "getMembers() : int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getfavorites-int", 
            "text": "Description:  Item favorites on MyAnimeList", 
            "title": "getFavorites() : int"
        }, 
        {
            "location": "/objects/model/manga/manga/#getsynopsis-string", 
            "text": "", 
            "title": "getSynopsis() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#getbackground-string", 
            "text": "Description:  Background information", 
            "title": "getBackground() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#getbroadcast-string", 
            "text": "Description:  Day   Time item broadcasted on", 
            "title": "getBroadcast() : string"
        }, 
        {
            "location": "/objects/model/manga/manga/#getrelated-array", 
            "text": "Description:  Related items as  1 \\Jikan\\Model\\MalUrl  in associative arrays with the keys as their respective relation", 
            "title": "getRelated() : array"
        }, 
        {
            "location": "/objects/model/manga/manga/#getauthors-malurl", 
            "text": "Description:  Authors as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getAuthors() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/manga/manga/#getserializations-malurl", 
            "text": "Description:  Serializations as  1 \\Jikan\\Model\\MalUrl", 
            "title": "getSerializations() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/manga/manga/#getgenres-malurl", 
            "text": "Description:  Genres as  1 \\Jikan\\Model\\MalUrl      \\Jikan\\Model\\MalUrl    \\Jikan\\Model\\DateRange", 
            "title": "getGenres() : MalUrl[]"
        }, 
        {
            "location": "/objects/model/manga/characters/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch One Piece\ns characters and staff\n\n\n// Request: https://myanimelist.net/anime/21\n\n\n$anime\n \n=\n \n$jikan\n-\nAnimeCharactersAndStaff\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest\n(\n21\n))\n\n\n);\n\n\nvar_dump\n(\n\n    \n$anime\n-\ngetCharacters\n()\n\n\n);\n\n\n\n\n\n\nMethods\n\n\ngetCharacters() : CharacterListItem[]\n\n\nDescription:\n Returns an array of \n1\n\\Jikan\\Model\\Character\\CharacterListItem\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Manga\\CharacterListItem", 
            "title": "Characters Model"
        }, 
        {
            "location": "/objects/model/manga/characters/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch One Piece s characters and staff  // Request: https://myanimelist.net/anime/21  $anime   =   $jikan - AnimeCharactersAndStaff ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeCharactersAndStaffRequest ( 21 ))  );  var_dump ( \n     $anime - getCharacters ()  );", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/manga/characters/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/manga/characters/#getcharacters-characterlistitem", 
            "text": "Description:  Returns an array of  1 \\Jikan\\Model\\Character\\CharacterListItem      \\Jikan\\Model\\Manga\\CharacterListItem", 
            "title": "getCharacters() : CharacterListItem[]"
        }, 
        {
            "location": "/objects/model/manga/stats/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch Naruto\ns manga stats\n\n\n// Request: https://myanimelist.net/manga/11/_/stats\n\n\n$manga\n \n=\n \n$jikan\n-\nMangaStats\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaStatsRequest\n(\n11\n))\n\n\n);\n\n\n\necho\n \nWatching: \n \n.\n \n$manga\n-\ngetWatching\n();\n\n\necho\n \nRated 10/10: \n \n.\n \n$manga\n-\ngetScores\n()[\n10\n]\n-\ngetVotes\n();\n\n\necho\n \nRated 1/10: \n \n.\n \n$manga\n-\ngetScores\n()[\n1\n]\n-\ngetVotes\n();\n\n\n\n\n\n\nMethods\n\n\ngetReading() : int\n\n\nDescription:\n Count of MyAnimeList users currently reading\n\n\ngetCompleted() : int\n\n\nDescription:\n Count of MyAnimeList users completed\n\n\ngetOnHold() : int\n\n\nDescription:\n Count of MyAnimeList users on hold\n\n\ngetDropped() : int\n\n\nDescription:\n Count of MyAnimeList users who've dropped\n\n\ngetPlanToRead() : int\n\n\nDescription:\n Count of MyAnimeList users planning to read\n\n\ngetTotal() : int\n\n\nDescription:\n Count of total MyAnimeList users with statuses set for this item\n\n\ngetScores() : array\n\n\nDescription:\n Scores by MyAnimeList users with array indexes 1-10", 
            "title": "Stats Model"
        }, 
        {
            "location": "/objects/model/manga/stats/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch Naruto s manga stats  // Request: https://myanimelist.net/manga/11/_/stats  $manga   =   $jikan - MangaStats ( \n     ( new   \\Jikan\\Request\\Manga\\MangaStatsRequest ( 11 ))  );  echo   Watching:    .   $manga - getWatching ();  echo   Rated 10/10:    .   $manga - getScores ()[ 10 ] - getVotes ();  echo   Rated 1/10:    .   $manga - getScores ()[ 1 ] - getVotes ();", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/manga/stats/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/manga/stats/#getreading-int", 
            "text": "Description:  Count of MyAnimeList users currently reading", 
            "title": "getReading() : int"
        }, 
        {
            "location": "/objects/model/manga/stats/#getcompleted-int", 
            "text": "Description:  Count of MyAnimeList users completed", 
            "title": "getCompleted() : int"
        }, 
        {
            "location": "/objects/model/manga/stats/#getonhold-int", 
            "text": "Description:  Count of MyAnimeList users on hold", 
            "title": "getOnHold() : int"
        }, 
        {
            "location": "/objects/model/manga/stats/#getdropped-int", 
            "text": "Description:  Count of MyAnimeList users who've dropped", 
            "title": "getDropped() : int"
        }, 
        {
            "location": "/objects/model/manga/stats/#getplantoread-int", 
            "text": "Description:  Count of MyAnimeList users planning to read", 
            "title": "getPlanToRead() : int"
        }, 
        {
            "location": "/objects/model/manga/stats/#gettotal-int", 
            "text": "Description:  Count of total MyAnimeList users with statuses set for this item", 
            "title": "getTotal() : int"
        }, 
        {
            "location": "/objects/model/manga/stats/#getscores-array", 
            "text": "Description:  Scores by MyAnimeList users with array indexes 1-10", 
            "title": "getScores() : array"
        }, 
        {
            "location": "/objects/model/manga/more-info/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// More Info related to Naruto manga\n\n\n// Request: https://myanimelist.net/manga/11/_/moreinfo\n\n\n$moreinfo\n \n=\n \n$jikan\n-\nMangaMoreInfo\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Manga\\MangaMoreInfoRequest\n(\n11\n))\n\n\n);\n\n\n\necho\n \n$moreinfo\n-\ngetMoreInfo\n();\n\n\n\n\n\n\nMethods\n\n\ngetMoreInfo() : ?string\n\n\nDescription:\n More information related to Item", 
            "title": "MoreInfo Model"
        }, 
        {
            "location": "/objects/model/manga/more-info/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // More Info related to Naruto manga  // Request: https://myanimelist.net/manga/11/_/moreinfo  $moreinfo   =   $jikan - MangaMoreInfo ( \n     ( new   \\Jikan\\Request\\Manga\\MangaMoreInfoRequest ( 11 ))  );  echo   $moreinfo - getMoreInfo ();", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/manga/more-info/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/manga/more-info/#getmoreinfo-string", 
            "text": "Description:  More information related to Item", 
            "title": "getMoreInfo() : ?string"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/", 
            "text": "Methods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetName() : string\n\n\nDescription:\n Characters's name\n\n\ngetRole() : string\n\n\nDescription:\n Character's role", 
            "title": "CharacterListItem"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/#getname-string", 
            "text": "Description:  Characters's name", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/manga/character-list-item/#getrole-string", 
            "text": "Description:  Character's role", 
            "title": "getRole() : string"
        }, 
        {
            "location": "/objects/model/character/character-list-item/", 
            "text": "Methods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetName() : string\n\n\nDescription:\n Characters's name\n\n\ngetRole() : string\n\n\nDescription:\n Character's role\n\n\ngetVoiceActors() : string\n\n\nDescription:\n Voice actors in an array as \n1\n\\Jikan\\Model\\Character\\VoiceActor\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Character\\VoiceActor", 
            "title": "CharacterListItem"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#getname-string", 
            "text": "Description:  Characters's name", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#getrole-string", 
            "text": "Description:  Character's role", 
            "title": "getRole() : string"
        }, 
        {
            "location": "/objects/model/character/character-list-item/#getvoiceactors-string", 
            "text": "Description:  Voice actors in an array as  1 \\Jikan\\Model\\Character\\VoiceActor      \\Jikan\\Model\\Character\\VoiceActor", 
            "title": "getVoiceActors() : string"
        }, 
        {
            "location": "/objects/model/character/voice-actor/", 
            "text": "Methods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetName() : string\n\n\nDescription:\n Voice Actor's name\n\n\ngetLanguage() : string\n\n\nDescription:\n Dubbed language", 
            "title": "VoiceActor"
        }, 
        {
            "location": "/objects/model/character/voice-actor/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/character/voice-actor/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/character/voice-actor/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/character/voice-actor/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/character/voice-actor/#getname-string", 
            "text": "Description:  Voice Actor's name", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/character/voice-actor/#getlanguage-string", 
            "text": "Description:  Dubbed language", 
            "title": "getLanguage() : string"
        }, 
        {
            "location": "/objects/model/character/character/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch Spike Spiegel\ns data\n\n\n// Request: https://myanimelist.net/character/1\n\n\n$character\n \n=\n \n$jikan\n-\nCharacter\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Character\\CharacterRequest\n(\n1\n))\n\n\n);\n\n\n\necho\n \n$character\n-\ngetName\n();\n\n\n\n\n\n\nMethods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetName() : string\n\n\nDescription:\n Name\n\n\ngetNameKanji() : ?string\n\n\nDescription:\n Name in Kanji\n\n\ngetNicknames() : string[]\n\n\nDescription:\n Nicknames\n\n\ngetAbout() : string\n\n\nDescription:\n Biography\n\n\ngetMemberFavorites() : int\n\n\nDescription:\n Count of MyAnimeList users favoriting this Character\n\n\ngetAnimeography() : Animeography[]\n\n\nDescription:\n Anime this character was in. Returns array of \n1\n\\Jikan\\Model\\Character\\Animeography\n\n\ngetMangaography() : Mangaography[]\n\n\nDescription:\n Manga this character was in. Returns array of \n2\n\\Jikan\\Model\\Character\\Mangaography\n\n\ngetVoiceActors() : Animeography[]\n\n\nDescription:\n Voice actors for this Character. Returns array of \n3\n\\Jikan\\Model\\Character\\VoiceActor\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Character\\Animeography\n\n\n\n\n\n\n\\Jikan\\Model\\Character\\Mangaography\n\n\n\n\n\n\n\\Jikan\\Model\\Character\\VoiceActor", 
            "title": "Character Model"
        }, 
        {
            "location": "/objects/model/character/character/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch Spike Spiegel s data  // Request: https://myanimelist.net/character/1  $character   =   $jikan - Character ( \n     ( new   \\Jikan\\Request\\Character\\CharacterRequest ( 1 ))  );  echo   $character - getName ();", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/character/character/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/character/character/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/character/character/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/character/character/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/character/character/#getname-string", 
            "text": "Description:  Name", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/character/character/#getnamekanji-string", 
            "text": "Description:  Name in Kanji", 
            "title": "getNameKanji() : ?string"
        }, 
        {
            "location": "/objects/model/character/character/#getnicknames-string", 
            "text": "Description:  Nicknames", 
            "title": "getNicknames() : string[]"
        }, 
        {
            "location": "/objects/model/character/character/#getabout-string", 
            "text": "Description:  Biography", 
            "title": "getAbout() : string"
        }, 
        {
            "location": "/objects/model/character/character/#getmemberfavorites-int", 
            "text": "Description:  Count of MyAnimeList users favoriting this Character", 
            "title": "getMemberFavorites() : int"
        }, 
        {
            "location": "/objects/model/character/character/#getanimeography-animeography", 
            "text": "Description:  Anime this character was in. Returns array of  1 \\Jikan\\Model\\Character\\Animeography", 
            "title": "getAnimeography() : Animeography[]"
        }, 
        {
            "location": "/objects/model/character/character/#getmangaography-mangaography", 
            "text": "Description:  Manga this character was in. Returns array of  2 \\Jikan\\Model\\Character\\Mangaography", 
            "title": "getMangaography() : Mangaography[]"
        }, 
        {
            "location": "/objects/model/character/character/#getvoiceactors-animeography", 
            "text": "Description:  Voice actors for this Character. Returns array of  3 \\Jikan\\Model\\Character\\VoiceActor      \\Jikan\\Model\\Character\\Animeography    \\Jikan\\Model\\Character\\Mangaography    \\Jikan\\Model\\Character\\VoiceActor", 
            "title": "getVoiceActors() : Animeography[]"
        }, 
        {
            "location": "/objects/model/person/person/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch Seki, Tomokazu\ns data\n\n\n// Request: https://myanimelist.net/people/1\n\n\n$person\n \n=\n \n$jikan\n-\nPerson\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Person\\PersonRequest\n(\n1\n))\n\n\n);\n\n\n\necho\n \n$person\n-\ngetName\n();\n\n\n\n\n\n\nMethods\n\n\ngetMalId() : int\n\n\nDescription:\n MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n MyAnimeList URL\n\n\ngetImageUrl() : string\n\n\nDescription:\n Image URL\n\n\ngetWebsiteUrl() : ?string\n\n\nDescription:\n Website URL of person\n\n\ngetName() : string\n\n\nDescription:\n Name\n\n\ngetGivenName() : string\n\n\ngetFamilyName() : string\n\n\ngetAlternativeNames() : string[]\n\n\ngetBirthday() : ?DateTimeImmutable\n\n\ngetMemberFavorites() : int\n\n\nDescription:\n Count of MyAnimeList users favoriting this Person\n\n\ngetAbout() : string\n\n\nDescription:\n Biography\n\n\ngetVoiceActingRoles() : VoiceActingRole[]\n\n\nDescription:\n Voice acting roles for this Person. Returns array of \n1\n\\Jikan\\Model\\Person\\VoiceActingRole\n\n\ngetAnimeStaffPositions() : AnimeStaffPosition[]\n\n\nDescription:\n Anime staff positions for this Person. Returns array of \n2\n\\Jikan\\Model\\Person\\AnimeStaffPosition\n\n\ngetPublishedManga() : PublishedManga[]\n\n\nDescription:\n Published Manga by this Person. Returns array of \n3\n\\Jikan\\Model\\Person\\PublishedManga\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Person\\VoiceActingRole\n\n\n\n\n\n\n\\Jikan\\Model\\Person\\AnimeStaffPosition\n\n\n\n\n\n\n\\Jikan\\Model\\Person\\PublishedManga", 
            "title": "Person Model"
        }, 
        {
            "location": "/objects/model/person/person/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch Seki, Tomokazu s data  // Request: https://myanimelist.net/people/1  $person   =   $jikan - Person ( \n     ( new   \\Jikan\\Request\\Person\\PersonRequest ( 1 ))  );  echo   $person - getName ();", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/person/person/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/person/person/#getmalid-int", 
            "text": "Description:  MyAnimeList ID", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/person/person/#geturl-string", 
            "text": "Description:  MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/person/person/#getimageurl-string", 
            "text": "Description:  Image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/person/person/#getwebsiteurl-string", 
            "text": "Description:  Website URL of person", 
            "title": "getWebsiteUrl() : ?string"
        }, 
        {
            "location": "/objects/model/person/person/#getname-string", 
            "text": "Description:  Name", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/person/person/#getgivenname-string", 
            "text": "", 
            "title": "getGivenName() : string"
        }, 
        {
            "location": "/objects/model/person/person/#getfamilyname-string", 
            "text": "", 
            "title": "getFamilyName() : string"
        }, 
        {
            "location": "/objects/model/person/person/#getalternativenames-string", 
            "text": "", 
            "title": "getAlternativeNames() : string[]"
        }, 
        {
            "location": "/objects/model/person/person/#getbirthday-datetimeimmutable", 
            "text": "", 
            "title": "getBirthday() : ?DateTimeImmutable"
        }, 
        {
            "location": "/objects/model/person/person/#getmemberfavorites-int", 
            "text": "Description:  Count of MyAnimeList users favoriting this Person", 
            "title": "getMemberFavorites() : int"
        }, 
        {
            "location": "/objects/model/person/person/#getabout-string", 
            "text": "Description:  Biography", 
            "title": "getAbout() : string"
        }, 
        {
            "location": "/objects/model/person/person/#getvoiceactingroles-voiceactingrole", 
            "text": "Description:  Voice acting roles for this Person. Returns array of  1 \\Jikan\\Model\\Person\\VoiceActingRole", 
            "title": "getVoiceActingRoles() : VoiceActingRole[]"
        }, 
        {
            "location": "/objects/model/person/person/#getanimestaffpositions-animestaffposition", 
            "text": "Description:  Anime staff positions for this Person. Returns array of  2 \\Jikan\\Model\\Person\\AnimeStaffPosition", 
            "title": "getAnimeStaffPositions() : AnimeStaffPosition[]"
        }, 
        {
            "location": "/objects/model/person/person/#getpublishedmanga-publishedmanga", 
            "text": "Description:  Published Manga by this Person. Returns array of  3 \\Jikan\\Model\\Person\\PublishedManga      \\Jikan\\Model\\Person\\VoiceActingRole    \\Jikan\\Model\\Person\\AnimeStaffPosition    \\Jikan\\Model\\Person\\PublishedManga", 
            "title": "getPublishedManga() : PublishedManga[]"
        }, 
        {
            "location": "/objects/model/news/news-list-item/", 
            "text": "Methods\n\n\ngetUrl() : string\n\n\nDescription:\n News MyAnimeList URL\n\n\ngetTitle() : string\n\n\ngetDate() : DateTimeImmutable\n\n\ngetAuthorName() : string\n\n\ngetAuthorUrl() : string\n\n\ngetForumUrl() : string\n\n\ngetImageUrl() : string\n\n\ngetIntro() : string\n\n\nDescription:\n News intro text\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Common\\MalUrl", 
            "title": "NewsListItem"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#geturl-string", 
            "text": "Description:  News MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#gettitle-string", 
            "text": "", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#getdate-datetimeimmutable", 
            "text": "", 
            "title": "getDate() : DateTimeImmutable"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#getauthorname-string", 
            "text": "", 
            "title": "getAuthorName() : string"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#getauthorurl-string", 
            "text": "", 
            "title": "getAuthorUrl() : string"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#getforumurl-string", 
            "text": "", 
            "title": "getForumUrl() : string"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#getimageurl-string", 
            "text": "", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/news/news-list-item/#getintro-string", 
            "text": "Description:  News intro text      \\Jikan\\Model\\Common\\MalUrl", 
            "title": "getIntro() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch topics related to One Piece\n\n\n// Request: https://myanimelist.net/anime/21/_/forum\n\n\n$topics\n \n=\n \n$jikan\n-\nAnimeForum\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeForumRequest\n(\n21\n))\n\n\n);\n\n\n\nforeach\n(\n$topics\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \nReplies: \n \n.\n \n$topic\n-\ngetReplies\n();\n\n\n    \necho\n \nLast post by: \n \n.\n \n$topic\n-\nlastPost\n()\n-\ngetAuthorName\n();\n\n\n}\n\n\n\n\n\n\nMethods\n\n\ngetTopicId() : int\n\n\nDescription:\n Topic MyAnimeList ID\n\n\ngetUrl() : string\n\n\nDescription:\n Topic MyAnimeList URL\n\n\ngetTitle() : string\n\n\nDescription:\n Topic title\n\n\ngetDatePosted() : DateTimeImmutable\n\n\ngetAuthorName() : string\n\n\nDescription:\n Name of the topic's author\n\n\ngetAuthorUrl() : string\n\n\nDescription:\n Author's profile URL\n\n\ngetReplies() : int\n\n\nDescription:\n Topic replies count\n\n\ngetLastPost() : \\Jikan\\Model\\Forum\\ForumPost\n\n\nDescription:\n Returns \n1\n\\Jikan\\Model\\Forum\\ForumPost\n\n\ngetImageUrl() : string\n\n\nDescription:\n News image URL\n\n\ngetIntro() : string\n\n\nDescription:\n News intro text\n\n\n\n\n\n\n\n\n\n\n\\Jikan\\Model\\Forum\\ForumPost", 
            "title": "ForumTopic"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch topics related to One Piece  // Request: https://myanimelist.net/anime/21/_/forum  $topics   =   $jikan - AnimeForum ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeForumRequest ( 21 ))  );  foreach ( $topics   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   Replies:    .   $topic - getReplies (); \n\n     echo   Last post by:    .   $topic - lastPost () - getAuthorName ();  }", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#gettopicid-int", 
            "text": "Description:  Topic MyAnimeList ID", 
            "title": "getTopicId() : int"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#geturl-string", 
            "text": "Description:  Topic MyAnimeList URL", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#gettitle-string", 
            "text": "Description:  Topic title", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getdateposted-datetimeimmutable", 
            "text": "", 
            "title": "getDatePosted() : DateTimeImmutable"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getauthorname-string", 
            "text": "Description:  Name of the topic's author", 
            "title": "getAuthorName() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getauthorurl-string", 
            "text": "Description:  Author's profile URL", 
            "title": "getAuthorUrl() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getreplies-int", 
            "text": "Description:  Topic replies count", 
            "title": "getReplies() : int"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getlastpost-jikanmodelforumforumpost", 
            "text": "Description:  Returns  1 \\Jikan\\Model\\Forum\\ForumPost", 
            "title": "getLastPost() : \\Jikan\\Model\\Forum\\ForumPost"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getimageurl-string", 
            "text": "Description:  News image URL", 
            "title": "getImageUrl() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-topic/#getintro-string", 
            "text": "Description:  News intro text      \\Jikan\\Model\\Forum\\ForumPost", 
            "title": "getIntro() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-post/", 
            "text": "Usage\n\n\n?php\n\n\n\n$jikan\n \n=\n \nnew\n \nJikan\\Jikan\n;\n\n\n\n// Fetch topics related to One Piece\n\n\n// Request: https://myanimelist.net/anime/21/_/forum\n\n\n$topics\n \n=\n \n$jikan\n-\nAnimeForum\n(\n\n    \n(\nnew\n \n\\Jikan\\Request\\Anime\\AnimeForumRequest\n(\n21\n))\n\n\n);\n\n\n\nforeach\n(\n$topics\n \nas\n \n$topic\n)\n \n{\n\n    \necho\n \n$topic\n-\ngetTitle\n()\n \n.\n \n\\n\n;\n\n    \necho\n \nReplies: \n \n.\n \n$topic\n-\ngetReplies\n();\n\n\n    \necho\n \nLast post by: \n \n.\n \n$topic\n-\nlastPost\n()\n-\ngetAuthorName\n();\n\n\n}\n\n\n\n\n\n\nMethods\n\n\ngetUrl() : string\n\n\nDescription:\n Permalink URL to forum post\n\n\ngetAuthorName() : string\n\n\nDescription:\n Author's name for the post\n\n\ngetAuthorUrl() : string\n\n\nDescription:\n Author's profile URL for the post\n\n\ngetRelativeDate() : DateTimeImmutable", 
            "title": "ForumPost"
        }, 
        {
            "location": "/objects/model/forum/forum-post/#usage", 
            "text": "?php  $jikan   =   new   Jikan\\Jikan ;  // Fetch topics related to One Piece  // Request: https://myanimelist.net/anime/21/_/forum  $topics   =   $jikan - AnimeForum ( \n     ( new   \\Jikan\\Request\\Anime\\AnimeForumRequest ( 21 ))  );  foreach ( $topics   as   $topic )   { \n     echo   $topic - getTitle ()   .   \\n ; \n     echo   Replies:    .   $topic - getReplies (); \n\n     echo   Last post by:    .   $topic - lastPost () - getAuthorName ();  }", 
            "title": "Usage"
        }, 
        {
            "location": "/objects/model/forum/forum-post/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/forum/forum-post/#geturl-string", 
            "text": "Description:  Permalink URL to forum post", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-post/#getauthorname-string", 
            "text": "Description:  Author's name for the post", 
            "title": "getAuthorName() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-post/#getauthorurl-string", 
            "text": "Description:  Author's profile URL for the post", 
            "title": "getAuthorUrl() : string"
        }, 
        {
            "location": "/objects/model/forum/forum-post/#getrelativedate-datetimeimmutable", 
            "text": "", 
            "title": "getRelativeDate() : DateTimeImmutable"
        }, 
        {
            "location": "/objects/model/common/picture/", 
            "text": "Methods\n\n\ngetLarge() : string\n\n\nDescription:\n Large image size URL\n\n\ngetSmall() : string\n\n\nDescription:\n Small image size URL", 
            "title": "Picture"
        }, 
        {
            "location": "/objects/model/common/picture/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/common/picture/#getlarge-string", 
            "text": "Description:  Large image size URL", 
            "title": "getLarge() : string"
        }, 
        {
            "location": "/objects/model/common/picture/#getsmall-string", 
            "text": "Description:  Small image size URL", 
            "title": "getSmall() : string"
        }, 
        {
            "location": "/objects/model/common/date-range/", 
            "text": "Methods\n\n\ngetFrom() : ?\\DateTimeImmutable\n\n\ngetUntil() : ?\\DateTimeImmutable\n\n\n__toString() : string\n\n\nDescription:\n String casting wil return raw parsed string from MyAnimeList", 
            "title": "DateRange"
        }, 
        {
            "location": "/objects/model/common/date-range/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/common/date-range/#getfrom-datetimeimmutable", 
            "text": "", 
            "title": "getFrom() : ?\\DateTimeImmutable"
        }, 
        {
            "location": "/objects/model/common/date-range/#getuntil-datetimeimmutable", 
            "text": "", 
            "title": "getUntil() : ?\\DateTimeImmutable"
        }, 
        {
            "location": "/objects/model/common/date-range/#__tostring-string", 
            "text": "Description:  String casting wil return raw parsed string from MyAnimeList", 
            "title": "__toString() : string"
        }, 
        {
            "location": "/objects/model/common/mal-url/", 
            "text": "This class is basically a parse of links, e.g below \n\n\na\n \nhref=\nhttps://myanimelist.com/type/id\nText Here\n/a\n\n\n\n\n\n\nMethods\n\n\ngetMalId() : int\n\n\nDescription:\n Extracts MyAnimeList ID from URL property\n\n\ngetType() : string\n\n\nDescription:\n Gets URL type, e.g \nanime\n, \nmanga\n, \nuser\n, etc\n\n\ngetUrl() : string\n\n\nDescription:\n Returns URL string\n\n\ngetName() : string\n\n\nDescription:\n Returns associated string with URL\n\n\ngetTitle() : string\n\n\nDescription:\n Alias of \ngetName()", 
            "title": "MalUrl"
        }, 
        {
            "location": "/objects/model/common/mal-url/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/objects/model/common/mal-url/#getmalid-int", 
            "text": "Description:  Extracts MyAnimeList ID from URL property", 
            "title": "getMalId() : int"
        }, 
        {
            "location": "/objects/model/common/mal-url/#gettype-string", 
            "text": "Description:  Gets URL type, e.g  anime ,  manga ,  user , etc", 
            "title": "getType() : string"
        }, 
        {
            "location": "/objects/model/common/mal-url/#geturl-string", 
            "text": "Description:  Returns URL string", 
            "title": "getUrl() : string"
        }, 
        {
            "location": "/objects/model/common/mal-url/#getname-string", 
            "text": "Description:  Returns associated string with URL", 
            "title": "getName() : string"
        }, 
        {
            "location": "/objects/model/common/mal-url/#gettitle-string", 
            "text": "Description:  Alias of  getName()", 
            "title": "getTitle() : string"
        }, 
        {
            "location": "/getting-help/", 
            "text": "", 
            "title": "Getting Help"
        }
    ]
}